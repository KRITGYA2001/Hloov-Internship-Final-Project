import { BufferAttribute, BufferGeometry, Material, Mesh, Object3D } from 'three';
import { LoaderSettings } from 'web-ifc';
import { IfcAPI } from 'web-ifc';
export declare const IdAttrName = "expressID";
export declare type IdAttributeByMaterial = {
    [id: number]: number;
};
export declare type IdAttributesByMaterials = {
    [materialID: string]: IdAttributeByMaterial;
};
export declare const merge: (geoms: BufferGeometry[], createGroups?: boolean) => any;
export declare const newFloatAttr: (data: any[], size: number) => BufferAttribute;
export declare const newIntAttr: (data: any[], size: number) => BufferAttribute;
export interface HighlightConfig {
    scene: Object3D;
    ids: number[];
    removePrevious: boolean;
    material?: Material;
}
export interface HighlightConfigOfModel extends HighlightConfig {
    modelID: number;
}
export declare const DEFAULT = "default";
export declare type SelectedItems = {
    [matID: string]: {
        ids: Set<number>;
        mesh: Mesh;
    };
};
export declare type MapFaceindexID = {
    [key: number]: number;
};
export declare type IdGeometries = {
    [expressID: number]: BufferGeometry;
};
export declare type GeometriesByMaterial = {
    material: Material;
    geometries: IdGeometries;
};
export interface GeometriesByMaterials {
    [materialID: string]: GeometriesByMaterial;
}
export interface TypesMap {
    [key: number]: number;
}
export interface IfcModel {
    modelID: number;
    mesh: IfcMesh;
    items: GeometriesByMaterials;
    types: TypesMap;
    jsonData: {
        [id: number]: JSONObject;
    };
}
export interface JSONObject {
    expressID: number;
    type: string;
    [key: string]: any;
}
export interface IfcState {
    models: {
        [modelID: number]: IfcModel;
    };
    api: IfcAPI;
    useJSON: boolean;
    webIfcSettings?: LoaderSettings;
}
export interface IfcMesh extends Mesh {
    modelID: number;
}
export interface Node {
    expressID: number;
    type: string;
    children: Node[];
}
export interface pName {
    name: number;
    relating: string;
    related: string;
    key: string;
}
export declare const PropsNames: {
    aggregates: {
        name: number;
        relating: string;
        related: string;
        key: string;
    };
    spatial: {
        name: number;
        relating: string;
        related: string;
        key: string;
    };
    psets: {
        name: number;
        relating: string;
        related: string;
        key: string;
    };
    materials: {
        name: number;
        relating: string;
        related: string;
        key: string;
    };
    type: {
        name: number;
        relating: string;
        related: string;
        key: string;
    };
};
