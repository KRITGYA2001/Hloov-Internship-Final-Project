{"version":3,"file":"IFCLoader.js","sources":["../src/IFC/BaseDefinitions.ts","../src/IFC/Components/IFCModel.ts","../src/IFC/Components/IFCParser.ts","../src/IFC/Components/SubsetManager.ts","../src/IFC/Components/IFCElementsMap.ts","../src/IFC/Components/IfcTypesMap.ts","../src/IFC/Components/PropertyManager.ts","../src/IFC/Components/TypeManager.ts","../src/IFC/Components/BvhManager.ts","../src/IFC/Components/ItemsHider.ts","../src/IFC/Components/MemoryCleaner.ts","../src/IFC/Components/IFCManager.ts","../src/IFCLoader.ts"],"sourcesContent":["import { BufferAttribute, BufferGeometry, Material, Mesh, Object3D } from 'three';\r\n// TODO: Remove ts ignore comments when @types/three gets updated\r\n// @ts-ignore\r\nimport { mergeBufferGeometries } from 'three/examples/jsm/utils/BufferGeometryUtils';\r\nimport {\r\n    IFCRELAGGREGATES, IFCRELASSOCIATESMATERIAL,\r\n    IFCRELCONTAINEDINSPATIALSTRUCTURE,\r\n    IFCRELDEFINESBYPROPERTIES,\r\n    IFCRELDEFINESBYTYPE, LoaderSettings\r\n} from 'web-ifc';\r\nimport { IfcAPI } from 'web-ifc';\r\n\r\nexport const IdAttrName = 'expressID';\r\n\r\nexport type IdAttributeByMaterial = { [id: number]: number };\r\nexport type IdAttributesByMaterials = { [materialID: string]: IdAttributeByMaterial };\r\n\r\nexport const merge = (geoms: BufferGeometry[], createGroups = false) => {\r\n    // @ts-ignore\r\n    return mergeBufferGeometries(geoms, createGroups);\r\n};\r\n\r\nexport const newFloatAttr = (data: any[], size: number) => {\r\n    return new BufferAttribute(new Float32Array(data), size);\r\n};\r\n\r\nexport const newIntAttr = (data: any[], size: number) => {\r\n    return new BufferAttribute(new Uint32Array(data), size);\r\n};\r\n\r\n//TODO: Rename \"scene\" to \"parent\" in the next major release\r\nexport interface HighlightConfig {\r\n    scene: Object3D;\r\n    ids: number[];\r\n    removePrevious: boolean;\r\n    material?: Material;\r\n}\r\n\r\nexport interface HighlightConfigOfModel extends HighlightConfig {\r\n    modelID: number;\r\n}\r\n\r\nexport const DEFAULT = 'default';\r\n\r\nexport type SelectedItems = {\r\n    [matID: string]: { ids: Set<number>; mesh: Mesh };\r\n};\r\n\r\nexport type MapFaceindexID = { [key: number]: number };\r\n\r\nexport type IdGeometries = {\r\n    [expressID: number]: BufferGeometry;\r\n};\r\n\r\nexport type GeometriesByMaterial = {\r\n    material: Material;\r\n    geometries: IdGeometries;\r\n};\r\n\r\nexport interface GeometriesByMaterials {\r\n    [materialID: string]: GeometriesByMaterial;\r\n}\r\n\r\nexport interface TypesMap {\r\n    [key: number]: number;\r\n}\r\n\r\nexport interface IfcModel {\r\n    modelID: number;\r\n    mesh: IfcMesh;\r\n    items: GeometriesByMaterials;\r\n    types: TypesMap;\r\n    jsonData: { [id: number]: JSONObject };\r\n}\r\n\r\nexport interface JSONObject {\r\n    expressID: number;\r\n    type: string;\r\n\r\n    [key: string]: any;\r\n}\r\n\r\nexport interface IfcState {\r\n    models: { [modelID: number]: IfcModel };\r\n    api: IfcAPI;\r\n    useJSON: boolean;\r\n    webIfcSettings?: LoaderSettings;\r\n}\r\n\r\nexport interface IfcMesh extends Mesh {\r\n    modelID: number;\r\n}\r\n\r\nexport interface Node {\r\n    expressID: number;\r\n    type: string;\r\n    children: Node[];\r\n}\r\n\r\nexport interface pName {\r\n    name: number;\r\n    relating: string;\r\n    related: string;\r\n    key: string;\r\n}\r\n\r\nexport const PropsNames = {\r\n    aggregates: {\r\n        name: IFCRELAGGREGATES,\r\n        relating: 'RelatingObject',\r\n        related: 'RelatedObjects',\r\n        key: 'children'\r\n    },\r\n    spatial: {\r\n        name: IFCRELCONTAINEDINSPATIALSTRUCTURE,\r\n        relating: 'RelatingStructure',\r\n        related: 'RelatedElements',\r\n        key: 'children'\r\n    },\r\n    psets: {\r\n        name: IFCRELDEFINESBYPROPERTIES,\r\n        relating: 'RelatingPropertyDefinition',\r\n        related: 'RelatedObjects',\r\n        key: 'hasPsets'\r\n    },\r\n    materials: {\r\n        name: IFCRELASSOCIATESMATERIAL,\r\n        relating: 'RelatingMaterial',\r\n        related: 'RelatedObjects',\r\n        key: 'hasMaterial'\r\n    },\r\n    type: {\r\n        name: IFCRELDEFINESBYTYPE,\r\n        relating: 'RelatingType',\r\n        related: 'RelatedObjects',\r\n        key: 'hasType'\r\n    }\r\n};\r\n","import { BufferGeometry, Material, Mesh, Object3D, Scene } from 'three';\r\nimport { IFCManager } from './IFCManager';\r\nimport { HighlightConfig } from '../BaseDefinitions';\r\n\r\nlet modelIdCounter = 0;\r\nconst nullIfcManagerErrorMessage = \"IfcManager is null!\";\r\n\r\n/**\r\n * Represents an IFC model. This object is returned by the `IFCLoader` after loading an IFC.\r\n * @geometry `THREE.Buffergeometry`, see Three.js documentation.\r\n * @materials `THREE.Material[]`, see Three.js documentation.\r\n * @manager contains all the logic to work with IFC.\r\n */\r\nexport class IFCModel extends Mesh {\r\n    modelID = modelIdCounter++;\r\n    ifcManager: IFCManager | null = null;\r\n\r\n    /**\r\n     * @deprecated `IfcModel` is already a mesh; you can place it in the scene directly.\r\n     */\r\n    mesh = this;\r\n\r\n    setIFCManager( manager: IFCManager ) {\r\n        this.ifcManager = manager;\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.setWasmPath` instead.\r\n     *\r\n     * Sets the relative path of web-ifc.wasm file in the project.\r\n     * Beware: you **must** serve this file in your page; this means\r\n     * that you have to copy this files from *node_modules/web-ifc*\r\n     * to your deployment directory.\r\n     *\r\n     * If you don't use this methods,\r\n     * IFC.js assumes that you are serving it in the root directory.\r\n     *\r\n     * Example if web-ifc.wasm is in dist/wasmDir:\r\n     * `ifcLoader.setWasmPath(\"dist/wasmDir/\");`\r\n     *\r\n     * @path Relative path to web-ifc.wasm.\r\n     */\r\n    setWasmPath(path: string) {\r\n        if(this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        this.ifcManager.setWasmPath(path);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.close` instead.\r\n     *\r\n     * Closes the specified model and deletes it from the [scene](https://threejs.org/docs/#api/en/scenes/Scene).\r\n     * @scene Scene where the model is (if it's located in a scene).\r\n     */\r\n    close(scene?: Scene) {\r\n        if(this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        this.ifcManager.close(this.modelID, scene);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.getExpressId` instead.\r\n     *\r\n     * Gets the **Express ID** to which the given face belongs.\r\n     * This ID uniquely identifies this entity within this IFC file.\r\n     * @geometry The geometry of the IFC model.\r\n     * @faceIndex The index of the face of a geometry.You can easily get this index using the [Raycaster](https://threejs.org/docs/#api/en/core/Raycaster).\r\n     */\r\n    getExpressId(geometry: BufferGeometry, faceIndex: number) {\r\n        if(this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        return this.ifcManager.getExpressId(geometry, faceIndex);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.getAllItemsOfType` instead.\r\n     *\r\n     * Returns all items of the specified type. You can import\r\n     * the types from *web-ifc*.\r\n     *\r\n     * Example to get all the standard walls of a project:\r\n     * ```js\r\n     * import { IFCWALLSTANDARDCASE } from 'web-ifc';\r\n     * const walls = ifcLoader.getAllItemsOfType(IFCWALLSTANDARDCASE);\r\n     * ```\r\n     * @type The type of IFC items to get.\r\n     * @verbose If false (default), this only gets IDs. If true, this also gets the native properties of all the fetched items.\r\n     */\r\n    getAllItemsOfType(type: number, verbose: boolean) {\r\n        if(this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        return this.ifcManager.getAllItemsOfType(this.modelID, type, verbose);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.getItemProperties` instead.\r\n     *\r\n     * Gets the native properties of the given element.\r\n     * @id Express ID of the element.\r\n     * @recursive Wether you want to get the information of the referenced elements recursively.\r\n     */\r\n    getItemProperties(id: number, recursive = false) {\r\n        if(this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        return this.ifcManager.getItemProperties(this.modelID, id, recursive);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.getPropertySets` instead.\r\n     *\r\n     * Gets the [property sets](https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/schema/ifckernel/lexical/ifcpropertyset.htm)\r\n     * assigned to the given element.\r\n     * @id Express ID of the element.\r\n     * @recursive If true, this gets the native properties of the referenced elements recursively.\r\n     */\r\n    getPropertySets(id: number, recursive = false) {\r\n        if(this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        return this.ifcManager.getPropertySets(this.modelID, id, recursive);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.getTypeProperties` instead.\r\n     *\r\n     * Gets the properties of the type assigned to the element.\r\n     * For example, if applied to a wall (IfcWall), this would get back the information\r\n     * contained in the IfcWallType assigned to it, if any.\r\n     * @id Express ID of the element.\r\n     * @recursive If true, this gets the native properties of the referenced elements recursively.\r\n     */\r\n    getTypeProperties(id: number, recursive = false) {\r\n        if(this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        return this.ifcManager.getTypeProperties(this.modelID, id, recursive);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.getIfcType` instead.\r\n     *\r\n     * Gets the ifc type of the specified item.\r\n     * @id Express ID of the element.\r\n     */\r\n    getIfcType(id: number) {\r\n        if(this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        return this.ifcManager.getIfcType(this.modelID, id);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.getSpatialStructure` instead.\r\n     *\r\n     * Gets the spatial structure of the project. The\r\n     * [spatial structure](https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/schema/ifcproductextension/lexical/ifcspatialstructureelement.htm)\r\n     * is the hierarchical structure that organizes every IFC project (all physical items\r\n     * are referenced to an element of the spatial structure). It is formed by\r\n     * one IfcProject that contains one or more IfcSites, that contain one or more\r\n     * IfcBuildings, that contain one or more IfcBuildingStoreys, that contain\r\n     * one or more IfcSpaces.\r\n     */\r\n    getSpatialStructure() {\r\n        if(this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        return this.ifcManager.getSpatialStructure(this.modelID);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.getSubset` instead.\r\n     *\r\n     * Gets the mesh of the subset with the specified [material](https://threejs.org/docs/#api/en/materials/Material).\r\n     * If no material is given, this returns the subset with the original materials.\r\n     * @material Material assigned to the subset, if any.\r\n     */\r\n    getSubset(material?: Material) {\r\n        if(this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        return this.ifcManager.getSubset(this.modelID, material);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.removeSubset` instead.\r\n     *\r\n     * Removes the specified subset.\r\n     * @parent The parent where the subset is (can be any `THREE.Object3D`).\r\n     * @material Material assigned to the subset, if any.\r\n     */\r\n    removeSubset(parent?: Object3D, material?: Material) {\r\n        if(this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        this.ifcManager.removeSubset(this.modelID, parent, material);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.createSubset` instead.\r\n     *\r\n     * Creates a new geometric subset.\r\n     * @config A configuration object with the following options:\r\n     * - **scene**: `THREE.Object3D` where the model is located.\r\n     * - **ids**: Express IDs of the items of the model that will conform the subset.\r\n     * - **removePrevious**: Wether to remove the previous subset of this model with this material.\r\n     * - **material**: (optional) Wether to apply a material to the subset\r\n     */\r\n    createSubset(config: HighlightConfig) {\r\n        if(this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        const modelConfig = { ...config, modelID: this.modelID };\r\n        return this.ifcManager.createSubset(modelConfig);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.hideItems` instead.\r\n     *\r\n     * Hides the selected items in the specified model\r\n     * @ids Express ID of the elements.\r\n     */\r\n    hideItems(ids: number[]) {\r\n        if(this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        this.ifcManager.hideItems(this.modelID, ids);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.hideAllItems` instead.\r\n     *\r\n     * Hides all the items of the specified model\r\n     */\r\n    hideAllItems() {\r\n        if(this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        this.ifcManager.hideAllItems(this.modelID);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.showItems` instead.\r\n     *\r\n     * Hides all the items of the specified model\r\n     * @ids Express ID of the elements.\r\n     */\r\n    showItems(ids: number[]) {\r\n        if(this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        this.ifcManager.showItems(this.modelID, ids);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.showAllItems` instead.\r\n     *\r\n     * Shows all the items of the specified model\r\n     */\r\n    showAllItems() {\r\n        if(this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        this.ifcManager.showAllItems(this.modelID);\r\n    }\r\n}\r\n","//@ts-ignore\r\nimport { PlacedGeometry, Color as ifcColor, IfcGeometry } from 'web-ifc';\r\nimport {\r\n    IfcState,\r\n    IfcMesh,\r\n    IdAttrName,\r\n    merge,\r\n    newFloatAttr,\r\n    newIntAttr,\r\n    IdAttributesByMaterials\r\n} from '../BaseDefinitions';\r\nimport {\r\n    Mesh,\r\n    Color,\r\n    MeshLambertMaterial,\r\n    DoubleSide,\r\n    Matrix4,\r\n    BufferGeometry,\r\n    BufferAttribute,\r\n    Material\r\n} from 'three';\r\nimport { BvhManager } from './BvhManager';\r\nimport {IFCModel} from \"./IFCModel\";\r\n\r\n/**\r\n * Reads all the geometry of the IFC file and generates an optimized `THREE.Mesh`.\r\n */\r\nexport class IFCParser {\r\n    loadedModels = 0;\r\n    // Represents the index of the model in webIfcAPI\r\n    private currentWebIfcID = -1;\r\n    // When using JSON data for optimization, webIfcAPI is reinitialized every time a model is loaded\r\n    // This means that currentID is always 0, while currentModelID is the real index of stored models\r\n    private currentModelID = -1;\r\n\r\n    constructor(private state: IfcState, private BVH: BvhManager) {}\r\n\r\n    async parse(buffer: any) {\r\n        if (this.state.api.wasmModule === undefined) await this.state.api.Init();\r\n        this.newIfcModel(buffer);\r\n        this.loadedModels++;\r\n        return this.loadAllGeometry();\r\n    }\r\n\r\n    getAndClearErrors(modelId: number){\r\n        // return this.state.api.GetAndClearErrors(modelId);\r\n    }\r\n\r\n    private newIfcModel(buffer: any) {\r\n        const data = new Uint8Array(buffer);\r\n        this.currentWebIfcID = this.state.api.OpenModel(data, this.state.webIfcSettings);\r\n        this.currentModelID = this.state.useJSON ? this.loadedModels : this.currentWebIfcID;\r\n        this.state.models[this.currentModelID] = {\r\n            modelID: this.currentModelID,\r\n            mesh: {} as IfcMesh,\r\n            items: {},\r\n            types: {},\r\n            jsonData: {}\r\n        };\r\n    }\r\n\r\n    private loadAllGeometry() {\r\n        this.saveAllPlacedGeometriesByMaterial();\r\n        return this.generateAllGeometriesByMaterial();\r\n    }\r\n\r\n    private generateAllGeometriesByMaterial() {\r\n        const { geometry, materials } = this.getGeometryAndMaterials();\r\n        this.BVH.applyThreeMeshBVH(geometry);\r\n        const mesh = new IFCModel(geometry, materials);\r\n        mesh.modelID = this.currentModelID;\r\n        this.state.models[this.currentModelID].mesh = mesh;\r\n        return mesh;\r\n    }\r\n\r\n    private getGeometryAndMaterials() {\r\n        const items = this.state.models[this.currentModelID].items;\r\n        const mergedByMaterial: BufferGeometry[] = [];\r\n        const materials: Material[] = [];\r\n        for (let materialID in items) {\r\n            materials.push(items[materialID].material);\r\n            const geometries = Object.values(items[materialID].geometries);\r\n            mergedByMaterial.push(merge(geometries));\r\n        }\r\n        const geometry = merge(mergedByMaterial, true);\r\n        return { geometry, materials };\r\n    }\r\n\r\n    private saveAllPlacedGeometriesByMaterial() {\r\n        const flatMeshes = this.state.api.LoadAllGeometry(this.currentWebIfcID);\r\n        for (let i = 0; i < flatMeshes.size(); i++) {\r\n            const flatMesh = flatMeshes.get(i);\r\n            const placedGeom = flatMesh.geometries;\r\n            for (let j = 0; j < placedGeom.size(); j++) {\r\n                this.savePlacedGeometry(placedGeom.get(j), flatMesh.expressID);\r\n            }\r\n        }\r\n    }\r\n\r\n    private savePlacedGeometry(placedGeometry: PlacedGeometry, id: number) {\r\n        const geometry = this.getBufferGeometry(placedGeometry);\r\n        geometry.computeVertexNormals();\r\n        const matrix = this.getMeshMatrix(placedGeometry.flatTransformation);\r\n        geometry.applyMatrix4(matrix);\r\n        this.saveGeometryByMaterial(geometry, placedGeometry, id);\r\n    }\r\n\r\n    private getBufferGeometry(placed: PlacedGeometry) {\r\n        const geometry = this.state.api.GetGeometry(this.currentWebIfcID, placed.geometryExpressID);\r\n        const vertexData = this.getVertices(geometry);\r\n        const indices = this.getIndices(geometry);\r\n        const { vertices, normals } = this.extractVertexData(vertexData);\r\n        return this.ifcGeomToBufferGeom(vertices, normals, indices);\r\n    }\r\n\r\n    private getVertices(geometry: IfcGeometry) {\r\n        const vData = geometry.GetVertexData();\r\n        const vDataSize = geometry.GetVertexDataSize();\r\n        return this.state.api.GetVertexArray(vData, vDataSize);\r\n    }\r\n\r\n    private getIndices(geometry: IfcGeometry) {\r\n        const iData = geometry.GetIndexData();\r\n        const iDataSize = geometry.GetIndexDataSize();\r\n        return this.state.api.GetIndexArray(iData, iDataSize);\r\n    }\r\n\r\n    private getMeshMatrix(matrix: number[]) {\r\n        const mat = new Matrix4();\r\n        mat.fromArray(matrix);\r\n        return mat;\r\n    }\r\n\r\n    private ifcGeomToBufferGeom(vertices: any[], normals: any[], indexData: any) {\r\n        const geometry = new BufferGeometry();\r\n        geometry.setAttribute('position', newFloatAttr(vertices, 3));\r\n        geometry.setAttribute('normal', newFloatAttr(normals, 3));\r\n        geometry.setIndex(new BufferAttribute(indexData, 1));\r\n        return geometry;\r\n    }\r\n\r\n    private extractVertexData(vertexData: any) {\r\n        const vertices = [];\r\n        const normals = [];\r\n        let isNormalData = false;\r\n        for (let i = 0; i < vertexData.length; i++) {\r\n            isNormalData ? normals.push(vertexData[i]) : vertices.push(vertexData[i]);\r\n            if ((i + 1) % 3 == 0) isNormalData = !isNormalData;\r\n        }\r\n        return { vertices, normals };\r\n    }\r\n\r\n    private saveGeometryByMaterial(geom: BufferGeometry, placedGeom: PlacedGeometry, id: number) {\r\n        const color = placedGeom.color;\r\n        const colorID = `${color.x}${color.y}${color.z}${color.w}`;\r\n        this.storeGeometryAttribute(id, geom);\r\n        this.createMaterial(colorID, color);\r\n        const item = this.state.models[this.currentModelID].items[colorID];\r\n        const currentGeom = item.geometries[id];\r\n        if (!currentGeom) return (item.geometries[id] = geom);\r\n        item.geometries[id] = merge([currentGeom, geom]);\r\n    }\r\n\r\n    private storeGeometryAttribute(id: number, geometry: BufferGeometry) {\r\n        const size = geometry.attributes.position.count;\r\n        const idAttribute = new Array(size).fill(id);\r\n        geometry.setAttribute(IdAttrName, newIntAttr(idAttribute, 1));\r\n    }\r\n\r\n    private createMaterial(colorID: string, color: ifcColor) {\r\n        const items = this.state.models[this.currentModelID].items;\r\n        if (items[colorID]) return;\r\n        const col = new Color(color.x, color.y, color.z);\r\n        const newMaterial = new MeshLambertMaterial({ color: col, side: DoubleSide });\r\n        newMaterial.transparent = color.w !== 1;\r\n        if (newMaterial.transparent) newMaterial.opacity = color.w;\r\n        items[colorID] = { material: newMaterial, geometries: {} };\r\n    }\r\n}\r\n","import {BufferGeometry, Material, Mesh, Object3D} from 'three';\r\nimport {\r\n    IfcState,\r\n    GeometriesByMaterials,\r\n    IdGeometries,\r\n    merge,\r\n    SelectedItems,\r\n    DEFAULT,\r\n    HighlightConfigOfModel\r\n} from '../BaseDefinitions';\r\nimport {BvhManager} from './BvhManager';\r\n\r\n/**\r\n * Contains the logic to get, create and delete geometric subsets of an IFC model. For example,\r\n * this can extract all the items in a specific IfcBuildingStorey and create a new Mesh.\r\n */\r\nexport class SubsetManager {\r\n    private state: IfcState;\r\n    private BVH: BvhManager;\r\n    private selected: SelectedItems = {};\r\n\r\n    constructor(state: IfcState, BVH: BvhManager) {\r\n        this.state = state;\r\n        this.BVH = BVH;\r\n    }\r\n\r\n    dispose() {\r\n        // @ts-ignore\r\n        this.BVH = null;\r\n        const items = Object.values(this.selected);\r\n        items.forEach(item => {\r\n            const mesh = item.mesh;\r\n            mesh.geometry.dispose();\r\n            Array.isArray(mesh.material) ?\r\n                mesh.material.forEach(mat => mat.dispose()) :\r\n                mesh.material.dispose();\r\n        });\r\n        this.selected = {};\r\n    }\r\n\r\n    getSubset(modelID: number, material?: Material) {\r\n        const currentMat = this.matIDNoConfig(modelID, material);\r\n        if (!this.selected[currentMat]) return null;\r\n        return this.selected[currentMat].mesh;\r\n    }\r\n\r\n    removeSubset(modelID: number, parent?: Object3D, material?: Material) {\r\n        const currentMat = this.matIDNoConfig(modelID, material);\r\n        if (!this.selected[currentMat]) return;\r\n        if (parent) parent.remove(this.selected[currentMat].mesh);\r\n        delete this.selected[currentMat];\r\n    }\r\n\r\n    createSubset(config: HighlightConfigOfModel) {\r\n        if (!this.isConfigValid(config)) return;\r\n        if (this.isPreviousSelection(config)) return;\r\n        if (this.isEasySelection(config)) return this.addToPreviousSelection(config);\r\n        this.updatePreviousSelection(config.scene, config);\r\n        return this.createSelectionInScene(config);\r\n    }\r\n\r\n    private createSelectionInScene(config: HighlightConfigOfModel) {\r\n        const filtered = this.filter(config);\r\n        const {geomsByMaterial, materials} = this.getGeomAndMat(filtered);\r\n        const isDefMaterial = this.isDefaultMat(config);\r\n        const geometry = this.getMergedGeometry(geomsByMaterial, isDefMaterial);\r\n        const mats = isDefMaterial ? materials : config.material;\r\n        this.BVH.applyThreeMeshBVH(geometry);\r\n        //@ts-ignore\r\n        const mesh = new Mesh(geometry, mats);\r\n        this.selected[this.matID(config)].mesh = mesh;\r\n        //@ts-ignore\r\n        mesh.modelID = config.modelID;\r\n        config.scene.add(mesh);\r\n        return mesh;\r\n    }\r\n\r\n    private getMergedGeometry(geomsByMaterial: BufferGeometry[], hasDefaultMaterial: boolean) {\r\n        return geomsByMaterial.length > 0\r\n            ? merge(geomsByMaterial, hasDefaultMaterial)\r\n            : new BufferGeometry();\r\n    }\r\n\r\n    private isConfigValid(config: HighlightConfigOfModel) {\r\n        return (\r\n            this.isValid(config.scene) &&\r\n            this.isValid(config.modelID) &&\r\n            this.isValid(config.ids) &&\r\n            this.isValid(config.removePrevious)\r\n        );\r\n    }\r\n\r\n    private isValid(item: any) {\r\n        return item != undefined && item != null;\r\n    }\r\n\r\n    private getGeomAndMat(filtered: GeometriesByMaterials) {\r\n        const geomsByMaterial: BufferGeometry[] = [];\r\n        const materials: Material[] = [];\r\n        for (let matID in filtered) {\r\n            const geoms = Object.values(filtered[matID].geometries);\r\n            if (!geoms.length) continue;\r\n            materials.push(filtered[matID].material);\r\n            if (geoms.length > 1) geomsByMaterial.push(merge(geoms));\r\n            else geomsByMaterial.push(...geoms);\r\n        }\r\n        return {geomsByMaterial, materials};\r\n    }\r\n\r\n    private updatePreviousSelection(parent: Object3D, config: HighlightConfigOfModel) {\r\n        const previous = this.selected[this.matID(config)];\r\n        if (!previous) return this.newSelectionGroup(config);\r\n        parent.remove(previous.mesh);\r\n        config.removePrevious\r\n            ? (previous.ids = new Set(config.ids))\r\n            : config.ids.forEach((id) => previous.ids.add(id));\r\n    }\r\n\r\n    private newSelectionGroup(config: HighlightConfigOfModel) {\r\n        this.selected[this.matID(config)] = {\r\n            ids: new Set(config.ids),\r\n            mesh: {} as Mesh\r\n        };\r\n    }\r\n\r\n    private isPreviousSelection(config: HighlightConfigOfModel) {\r\n        if (!this.selected[this.matID(config)]) return false;\r\n        if (this.containsIds(config)) return true;\r\n        const previousIds = this.selected[this.matID(config)].ids;\r\n        return JSON.stringify(config.ids) === JSON.stringify(previousIds);\r\n    }\r\n\r\n    private containsIds(config: HighlightConfigOfModel) {\r\n        const newIds = config.ids;\r\n        const previous = Array.from(this.selected[this.matID(config)].ids);\r\n        // prettier-ignore\r\n        //@ts-ignore\r\n        return newIds.every((i => v => (i = previous.indexOf(v, i) + 1))(0));\r\n    }\r\n\r\n    private addToPreviousSelection(config: HighlightConfigOfModel) {\r\n        const previous = this.selected[this.matID(config)];\r\n        const filtered = this.filter(config, new Set(config.ids));\r\n        // @ts-ignore\r\n        // prettier-ignore\r\n        const geometries = Object.values(filtered).map((i) => Object.values(i.geometries)).flat();\r\n        const previousGeom = previous.mesh.geometry;\r\n        previous.mesh.geometry = merge([previousGeom, ...geometries]);\r\n        config.ids.forEach((id) => previous.ids.add(id));\r\n    }\r\n\r\n    private filter(config: HighlightConfigOfModel, itemsID?: Set<number>) {\r\n        const ids = itemsID || this.selected[this.matID(config)].ids;\r\n        const items = this.state.models[config.modelID].items;\r\n        const filtered: GeometriesByMaterials = {};\r\n        for (let matID in items) {\r\n            filtered[matID] = {\r\n                material: items[matID].material,\r\n                geometries: this.filterGeometries(ids, items[matID].geometries)\r\n            };\r\n        }\r\n        return filtered;\r\n    }\r\n\r\n    private filterGeometries(selectedIDs: Set<number>, geometries: IdGeometries) {\r\n        const ids = Array.from(selectedIDs);\r\n        return Object.keys(geometries)\r\n            .filter((key) => ids.includes(parseInt(key, 10)))\r\n            .reduce((obj, key) => {\r\n                //@ts-ignore\r\n                return {...obj, [key]: geometries[key]};\r\n            }, {});\r\n    }\r\n\r\n    private isEasySelection(config: HighlightConfigOfModel) {\r\n        const matID = this.matID(config);\r\n        if (!config.removePrevious && !this.isDefaultMat(config) && this.selected[matID]) return true;\r\n    }\r\n\r\n    private isDefaultMat(config: HighlightConfigOfModel) {\r\n        return this.matIDNoConfig(config.modelID) === this.matID(config);\r\n    }\r\n\r\n    private matID(config: HighlightConfigOfModel) {\r\n        let name;\r\n        if (!config.material) name = DEFAULT;\r\n        else name = config.material.uuid || DEFAULT;\r\n        return name.concat(' - ').concat(config.modelID.toString());\r\n    }\r\n\r\n    private matIDNoConfig(modelID: number, material?: Material) {\r\n        let name = DEFAULT;\r\n        if (material) name = material.uuid;\r\n        return name.concat(' - ').concat(modelID.toString());\r\n    }\r\n}\r\n","export const IfcElements: {[key: number]: string} = {\r\n  103090709: 'IFCPROJECT',\r\n  4097777520: 'IFCSITE',\r\n  4031249490: 'IFCBUILDING',\r\n  3124254112: 'IFCBUILDINGSTOREY',\r\n  3856911033: 'IFCSPACE',\r\n  1674181508: 'IFCANNOTATION',\r\n  25142252: 'IFCCONTROLLER',\r\n  32344328: 'IFCBOILER',\r\n  76236018: 'IFCLAMP',\r\n  90941305: 'IFCPUMP',\r\n  177149247: 'IFCAIRTERMINALBOX',\r\n  182646315: 'IFCFLOWINSTRUMENT',\r\n  263784265: 'IFCFURNISHINGELEMENT',\r\n  264262732: 'IFCELECTRICGENERATOR',\r\n  277319702: 'IFCAUDIOVISUALAPPLIANCE',\r\n  310824031: 'IFCPIPEFITTING',\r\n  331165859: 'IFCSTAIR',\r\n  342316401: 'IFCDUCTFITTING',\r\n  377706215: 'IFCMECHANICALFASTENER',\r\n  395920057: 'IFCDOOR',\r\n  402227799: 'IFCELECTRICMOTOR',\r\n  413509423: 'IFCSYSTEMFURNITUREELEMENT',\r\n  484807127: 'IFCEVAPORATOR',\r\n  486154966: 'IFCWINDOWSTANDARDCASE',\r\n  629592764: 'IFCLIGHTFIXTURE',\r\n  630975310: 'IFCUNITARYCONTROLELEMENT',\r\n  635142910: 'IFCCABLECARRIERFITTING',\r\n  639361253: 'IFCCOIL',\r\n  647756555: 'IFCFASTENER',\r\n  707683696: 'IFCFLOWSTORAGEDEVICE',\r\n  738039164: 'IFCPROTECTIVEDEVICE',\r\n  753842376: 'IFCBEAM',\r\n  812556717: 'IFCTANK',\r\n  819412036: 'IFCFILTER',\r\n  843113511: 'IFCCOLUMN',\r\n  862014818: 'IFCELECTRICDISTRIBUTIONBOARD',\r\n  900683007: 'IFCFOOTING',\r\n  905975707: 'IFCCOLUMNSTANDARDCASE',\r\n  926996030: 'IFCVOIDINGFEATURE',\r\n  979691226: 'IFCREINFORCINGBAR',\r\n  987401354: 'IFCFLOWSEGMENT',\r\n  1003880860: 'IFCELECTRICTIMECONTROL',\r\n  1051757585: 'IFCCABLEFITTING',\r\n  1052013943: 'IFCDISTRIBUTIONCHAMBERELEMENT',\r\n  1062813311: 'IFCDISTRIBUTIONCONTROLELEMENT',\r\n  1073191201: 'IFCMEMBER',\r\n  1095909175: 'IFCBUILDINGELEMENTPROXY',\r\n  1156407060: 'IFCPLATESTANDARDCASE',\r\n  1162798199: 'IFCSWITCHINGDEVICE',\r\n  1329646415: 'IFCSHADINGDEVICE',\r\n  1335981549: 'IFCDISCRETEACCESSORY',\r\n  1360408905: 'IFCDUCTSILENCER',\r\n  1404847402: 'IFCSTACKTERMINAL',\r\n  1426591983: 'IFCFIRESUPPRESSIONTERMINAL',\r\n  1437502449: 'IFCMEDICALDEVICE',\r\n  1509553395: 'IFCFURNITURE',\r\n  1529196076: 'IFCSLAB',\r\n  1620046519: 'IFCTRANSPORTELEMENT',\r\n  1634111441: 'IFCAIRTERMINAL',\r\n  1658829314: 'IFCENERGYCONVERSIONDEVICE',\r\n  1677625105: 'IFCCIVILELEMENT',\r\n  1687234759: 'IFCPILE',\r\n  1904799276: 'IFCELECTRICAPPLIANCE',\r\n  1911478936: 'IFCMEMBERSTANDARDCASE',\r\n  1945004755: 'IFCDISTRIBUTIONELEMENT',\r\n  1973544240: 'IFCCOVERING',\r\n  1999602285: 'IFCSPACEHEATER',\r\n  2016517767: 'IFCROOF',\r\n  2056796094: 'IFCAIRTOAIRHEATRECOVERY',\r\n  2058353004: 'IFCFLOWCONTROLLER',\r\n  2068733104: 'IFCHUMIDIFIER',\r\n  2176052936: 'IFCJUNCTIONBOX',\r\n  2188021234: 'IFCFLOWMETER',\r\n  2223149337: 'IFCFLOWTERMINAL',\r\n  2262370178: 'IFCRAILING',\r\n  2272882330: 'IFCCONDENSER',\r\n  2295281155: 'IFCPROTECTIVEDEVICETRIPPINGUNIT',\r\n  2320036040: 'IFCREINFORCINGMESH',\r\n  2347447852: 'IFCTENDONANCHOR',\r\n  2391383451: 'IFCVIBRATIONISOLATOR',\r\n  2391406946: 'IFCWALL',\r\n  2474470126: 'IFCMOTORCONNECTION',\r\n  2769231204: 'IFCVIRTUALELEMENT',\r\n  2814081492: 'IFCENGINE',\r\n  2906023776: 'IFCBEAMSTANDARDCASE',\r\n  2938176219: 'IFCBURNER',\r\n  2979338954: 'IFCBUILDINGELEMENTPART',\r\n  3024970846: 'IFCRAMP',\r\n  3026737570: 'IFCTUBEBUNDLE',\r\n  3027962421: 'IFCSLABSTANDARDCASE',\r\n  3040386961: 'IFCDISTRIBUTIONFLOWELEMENT',\r\n  3053780830: 'IFCSANITARYTERMINAL',\r\n  3079942009: 'IFCOPENINGSTANDARDCASE',\r\n  3087945054: 'IFCALARM',\r\n  3101698114: 'IFCSURFACEFEATURE',\r\n  3127900445: 'IFCSLABELEMENTEDCASE',\r\n  3132237377: 'IFCFLOWMOVINGDEVICE',\r\n  3171933400: 'IFCPLATE',\r\n  3221913625: 'IFCCOMMUNICATIONSAPPLIANCE',\r\n  3242481149: 'IFCDOORSTANDARDCASE',\r\n  3283111854: 'IFCRAMPFLIGHT',\r\n  3296154744: 'IFCCHIMNEY',\r\n  3304561284: 'IFCWINDOW',\r\n  3310460725: 'IFCELECTRICFLOWSTORAGEDEVICE',\r\n  3319311131: 'IFCHEATEXCHANGER',\r\n  3415622556: 'IFCFAN',\r\n  3420628829: 'IFCSOLARDEVICE',\r\n  3493046030: 'IFCGEOGRAPHICELEMENT',\r\n  3495092785: 'IFCCURTAINWALL',\r\n  3508470533: 'IFCFLOWTREATMENTDEVICE',\r\n  3512223829: 'IFCWALLSTANDARDCASE',\r\n  3518393246: 'IFCDUCTSEGMENT',\r\n  3571504051: 'IFCCOMPRESSOR',\r\n  3588315303: 'IFCOPENINGELEMENT',\r\n  3612865200: 'IFCPIPESEGMENT',\r\n  3640358203: 'IFCCOOLINGTOWER',\r\n  3651124850: 'IFCPROJECTIONELEMENT',\r\n  3694346114: 'IFCOUTLET',\r\n  3747195512: 'IFCEVAPORATIVECOOLER',\r\n  3758799889: 'IFCCABLECARRIERSEGMENT',\r\n  3824725483: 'IFCTENDON',\r\n  3825984169: 'IFCTRANSFORMER',\r\n  3902619387: 'IFCCHILLER',\r\n  4074379575: 'IFCDAMPER',\r\n  4086658281: 'IFCSENSOR',\r\n  4123344466: 'IFCELEMENTASSEMBLY',\r\n  4136498852: 'IFCCOOLEDBEAM',\r\n  4156078855: 'IFCWALLELEMENTEDCASE',\r\n  4175244083: 'IFCINTERCEPTOR',\r\n  4207607924: 'IFCVALVE',\r\n  4217484030: 'IFCCABLESEGMENT',\r\n  4237592921: 'IFCWASTETERMINAL',\r\n  4252922144: 'IFCSTAIRFLIGHT',\r\n  4278956645: 'IFCFLOWFITTING',\r\n  4288193352: 'IFCACTUATOR',\r\n  4292641817: 'IFCUNITARYEQUIPMENT',\r\n  3009204131: 'IFCGRID'\r\n};\r\n","export const IfcTypesMap:  {[key: number]: string} = {\r\n    3821786052: \"IFCACTIONREQUEST\",\r\n    2296667514: \"IFCACTOR\",\r\n    3630933823: \"IFCACTORROLE\",\r\n    4288193352: \"IFCACTUATOR\",\r\n    2874132201: \"IFCACTUATORTYPE\",\r\n    618182010: \"IFCADDRESS\",\r\n    1635779807: \"IFCADVANCEDBREP\",\r\n    2603310189: \"IFCADVANCEDBREPWITHVOIDS\",\r\n    3406155212: \"IFCADVANCEDFACE\",\r\n    1634111441: \"IFCAIRTERMINAL\",\r\n    177149247: \"IFCAIRTERMINALBOX\",\r\n    1411407467: \"IFCAIRTERMINALBOXTYPE\",\r\n    3352864051: \"IFCAIRTERMINALTYPE\",\r\n    2056796094: \"IFCAIRTOAIRHEATRECOVERY\",\r\n    1871374353: \"IFCAIRTOAIRHEATRECOVERYTYPE\",\r\n    3087945054: \"IFCALARM\",\r\n    3001207471: \"IFCALARMTYPE\",\r\n    325726236: \"IFCALIGNMENT\",\r\n    749761778: \"IFCALIGNMENT2DHORIZONTAL\",\r\n    3199563722: \"IFCALIGNMENT2DHORIZONTALSEGMENT\",\r\n    2483840362: \"IFCALIGNMENT2DSEGMENT\",\r\n    3379348081: \"IFCALIGNMENT2DVERSEGCIRCULARARC\",\r\n    3239324667: \"IFCALIGNMENT2DVERSEGLINE\",\r\n    4263986512: \"IFCALIGNMENT2DVERSEGPARABOLICARC\",\r\n    53199957: \"IFCALIGNMENT2DVERTICAL\",\r\n    2029264950: \"IFCALIGNMENT2DVERTICALSEGMENT\",\r\n    3512275521: \"IFCALIGNMENTCURVE\",\r\n    1674181508: \"IFCANNOTATION\",\r\n    669184980: \"IFCANNOTATIONFILLAREA\",\r\n    639542469: \"IFCAPPLICATION\",\r\n    411424972: \"IFCAPPLIEDVALUE\",\r\n    130549933: \"IFCAPPROVAL\",\r\n    3869604511: \"IFCAPPROVALRELATIONSHIP\",\r\n    3798115385: \"IFCARBITRARYCLOSEDPROFILEDEF\",\r\n    1310608509: \"IFCARBITRARYOPENPROFILEDEF\",\r\n    2705031697: \"IFCARBITRARYPROFILEDEFWITHVOIDS\",\r\n    3460190687: \"IFCASSET\",\r\n    3207858831: \"IFCASYMMETRICISHAPEPROFILEDEF\",\r\n    277319702: \"IFCAUDIOVISUALAPPLIANCE\",\r\n    1532957894: \"IFCAUDIOVISUALAPPLIANCETYPE\",\r\n    4261334040: \"IFCAXIS1PLACEMENT\",\r\n    3125803723: \"IFCAXIS2PLACEMENT2D\",\r\n    2740243338: \"IFCAXIS2PLACEMENT3D\",\r\n    1967976161: \"IFCBSPLINECURVE\",\r\n    2461110595: \"IFCBSPLINECURVEWITHKNOTS\",\r\n    2887950389: \"IFCBSPLINESURFACE\",\r\n    167062518: \"IFCBSPLINESURFACEWITHKNOTS\",\r\n    753842376: \"IFCBEAM\",\r\n    2906023776: \"IFCBEAMSTANDARDCASE\",\r\n    819618141: \"IFCBEAMTYPE\",\r\n    4196446775: \"IFCBEARING\",\r\n    3649138523: \"IFCBEARINGTYPE\",\r\n    616511568: \"IFCBLOBTEXTURE\",\r\n    1334484129: \"IFCBLOCK\",\r\n    32344328: \"IFCBOILER\",\r\n    231477066: \"IFCBOILERTYPE\",\r\n    3649129432: \"IFCBOOLEANCLIPPINGRESULT\",\r\n    2736907675: \"IFCBOOLEANRESULT\",\r\n    4037036970: \"IFCBOUNDARYCONDITION\",\r\n    1136057603: \"IFCBOUNDARYCURVE\",\r\n    1560379544: \"IFCBOUNDARYEDGECONDITION\",\r\n    3367102660: \"IFCBOUNDARYFACECONDITION\",\r\n    1387855156: \"IFCBOUNDARYNODECONDITION\",\r\n    2069777674: \"IFCBOUNDARYNODECONDITIONWARPING\",\r\n    1260505505: \"IFCBOUNDEDCURVE\",\r\n    4182860854: \"IFCBOUNDEDSURFACE\",\r\n    2581212453: \"IFCBOUNDINGBOX\",\r\n    2713105998: \"IFCBOXEDHALFSPACE\",\r\n    644574406: \"IFCBRIDGE\",\r\n    963979645: \"IFCBRIDGEPART\",\r\n    4031249490: \"IFCBUILDING\",\r\n    3299480353: \"IFCBUILDINGELEMENT\",\r\n    2979338954: \"IFCBUILDINGELEMENTPART\",\r\n    39481116: \"IFCBUILDINGELEMENTPARTTYPE\",\r\n    1095909175: \"IFCBUILDINGELEMENTPROXY\",\r\n    1909888760: \"IFCBUILDINGELEMENTPROXYTYPE\",\r\n    1950629157: \"IFCBUILDINGELEMENTTYPE\",\r\n    3124254112: \"IFCBUILDINGSTOREY\",\r\n    1177604601: \"IFCBUILDINGSYSTEM\",\r\n    2938176219: \"IFCBURNER\",\r\n    2188180465: \"IFCBURNERTYPE\",\r\n    2898889636: \"IFCCSHAPEPROFILEDEF\",\r\n    635142910: \"IFCCABLECARRIERFITTING\",\r\n    395041908: \"IFCCABLECARRIERFITTINGTYPE\",\r\n    3758799889: \"IFCCABLECARRIERSEGMENT\",\r\n    3293546465: \"IFCCABLECARRIERSEGMENTTYPE\",\r\n    1051757585: \"IFCCABLEFITTING\",\r\n    2674252688: \"IFCCABLEFITTINGTYPE\",\r\n    4217484030: \"IFCCABLESEGMENT\",\r\n    1285652485: \"IFCCABLESEGMENTTYPE\",\r\n    3999819293: \"IFCCAISSONFOUNDATION\",\r\n    3203706013: \"IFCCAISSONFOUNDATIONTYPE\",\r\n    1123145078: \"IFCCARTESIANPOINT\",\r\n    574549367: \"IFCCARTESIANPOINTLIST\",\r\n    1675464909: \"IFCCARTESIANPOINTLIST2D\",\r\n    2059837836: \"IFCCARTESIANPOINTLIST3D\",\r\n    59481748: \"IFCCARTESIANTRANSFORMATIONOPERATOR\",\r\n    3749851601: \"IFCCARTESIANTRANSFORMATIONOPERATOR2D\",\r\n    3486308946: \"IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM\",\r\n    3331915920: \"IFCCARTESIANTRANSFORMATIONOPERATOR3D\",\r\n    1416205885: \"IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM\",\r\n    3150382593: \"IFCCENTERLINEPROFILEDEF\",\r\n    3902619387: \"IFCCHILLER\",\r\n    2951183804: \"IFCCHILLERTYPE\",\r\n    3296154744: \"IFCCHIMNEY\",\r\n    2197970202: \"IFCCHIMNEYTYPE\",\r\n    2611217952: \"IFCCIRCLE\",\r\n    2937912522: \"IFCCIRCLEHOLLOWPROFILEDEF\",\r\n    1383045692: \"IFCCIRCLEPROFILEDEF\",\r\n    1062206242: \"IFCCIRCULARARCSEGMENT2D\",\r\n    1677625105: \"IFCCIVILELEMENT\",\r\n    3893394355: \"IFCCIVILELEMENTTYPE\",\r\n    747523909: \"IFCCLASSIFICATION\",\r\n    647927063: \"IFCCLASSIFICATIONREFERENCE\",\r\n    2205249479: \"IFCCLOSEDSHELL\",\r\n    639361253: \"IFCCOIL\",\r\n    2301859152: \"IFCCOILTYPE\",\r\n    776857604: \"IFCCOLOURRGB\",\r\n    3285139300: \"IFCCOLOURRGBLIST\",\r\n    3264961684: \"IFCCOLOURSPECIFICATION\",\r\n    843113511: \"IFCCOLUMN\",\r\n    905975707: \"IFCCOLUMNSTANDARDCASE\",\r\n    300633059: \"IFCCOLUMNTYPE\",\r\n    3221913625: \"IFCCOMMUNICATIONSAPPLIANCE\",\r\n    400855858: \"IFCCOMMUNICATIONSAPPLIANCETYPE\",\r\n    2542286263: \"IFCCOMPLEXPROPERTY\",\r\n    3875453745: \"IFCCOMPLEXPROPERTYTEMPLATE\",\r\n    3732776249: \"IFCCOMPOSITECURVE\",\r\n    15328376: \"IFCCOMPOSITECURVEONSURFACE\",\r\n    2485617015: \"IFCCOMPOSITECURVESEGMENT\",\r\n    1485152156: \"IFCCOMPOSITEPROFILEDEF\",\r\n    3571504051: \"IFCCOMPRESSOR\",\r\n    3850581409: \"IFCCOMPRESSORTYPE\",\r\n    2272882330: \"IFCCONDENSER\",\r\n    2816379211: \"IFCCONDENSERTYPE\",\r\n    2510884976: \"IFCCONIC\",\r\n    370225590: \"IFCCONNECTEDFACESET\",\r\n    1981873012: \"IFCCONNECTIONCURVEGEOMETRY\",\r\n    2859738748: \"IFCCONNECTIONGEOMETRY\",\r\n    45288368: \"IFCCONNECTIONPOINTECCENTRICITY\",\r\n    2614616156: \"IFCCONNECTIONPOINTGEOMETRY\",\r\n    2732653382: \"IFCCONNECTIONSURFACEGEOMETRY\",\r\n    775493141: \"IFCCONNECTIONVOLUMEGEOMETRY\",\r\n    1959218052: \"IFCCONSTRAINT\",\r\n    3898045240: \"IFCCONSTRUCTIONEQUIPMENTRESOURCE\",\r\n    2185764099: \"IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE\",\r\n    1060000209: \"IFCCONSTRUCTIONMATERIALRESOURCE\",\r\n    4105962743: \"IFCCONSTRUCTIONMATERIALRESOURCETYPE\",\r\n    488727124: \"IFCCONSTRUCTIONPRODUCTRESOURCE\",\r\n    1525564444: \"IFCCONSTRUCTIONPRODUCTRESOURCETYPE\",\r\n    2559216714: \"IFCCONSTRUCTIONRESOURCE\",\r\n    2574617495: \"IFCCONSTRUCTIONRESOURCETYPE\",\r\n    3419103109: \"IFCCONTEXT\",\r\n    3050246964: \"IFCCONTEXTDEPENDENTUNIT\",\r\n    3293443760: \"IFCCONTROL\",\r\n    25142252: \"IFCCONTROLLER\",\r\n    578613899: \"IFCCONTROLLERTYPE\",\r\n    2889183280: \"IFCCONVERSIONBASEDUNIT\",\r\n    2713554722: \"IFCCONVERSIONBASEDUNITWITHOFFSET\",\r\n    4136498852: \"IFCCOOLEDBEAM\",\r\n    335055490: \"IFCCOOLEDBEAMTYPE\",\r\n    3640358203: \"IFCCOOLINGTOWER\",\r\n    2954562838: \"IFCCOOLINGTOWERTYPE\",\r\n    1785450214: \"IFCCOORDINATEOPERATION\",\r\n    1466758467: \"IFCCOORDINATEREFERENCESYSTEM\",\r\n    3895139033: \"IFCCOSTITEM\",\r\n    1419761937: \"IFCCOSTSCHEDULE\",\r\n    602808272: \"IFCCOSTVALUE\",\r\n    1973544240: \"IFCCOVERING\",\r\n    1916426348: \"IFCCOVERINGTYPE\",\r\n    3295246426: \"IFCCREWRESOURCE\",\r\n    1815067380: \"IFCCREWRESOURCETYPE\",\r\n    2506170314: \"IFCCSGPRIMITIVE3D\",\r\n    2147822146: \"IFCCSGSOLID\",\r\n    539742890: \"IFCCURRENCYRELATIONSHIP\",\r\n    3495092785: \"IFCCURTAINWALL\",\r\n    1457835157: \"IFCCURTAINWALLTYPE\",\r\n    2601014836: \"IFCCURVE\",\r\n    2827736869: \"IFCCURVEBOUNDEDPLANE\",\r\n    2629017746: \"IFCCURVEBOUNDEDSURFACE\",\r\n    1186437898: \"IFCCURVESEGMENT2D\",\r\n    3800577675: \"IFCCURVESTYLE\",\r\n    1105321065: \"IFCCURVESTYLEFONT\",\r\n    2367409068: \"IFCCURVESTYLEFONTANDSCALING\",\r\n    3510044353: \"IFCCURVESTYLEFONTPATTERN\",\r\n    1213902940: \"IFCCYLINDRICALSURFACE\",\r\n    4074379575: \"IFCDAMPER\",\r\n    3961806047: \"IFCDAMPERTYPE\",\r\n    3426335179: \"IFCDEEPFOUNDATION\",\r\n    1306400036: \"IFCDEEPFOUNDATIONTYPE\",\r\n    3632507154: \"IFCDERIVEDPROFILEDEF\",\r\n    1765591967: \"IFCDERIVEDUNIT\",\r\n    1045800335: \"IFCDERIVEDUNITELEMENT\",\r\n    2949456006: \"IFCDIMENSIONALEXPONENTS\",\r\n    32440307: \"IFCDIRECTION\",\r\n    1335981549: \"IFCDISCRETEACCESSORY\",\r\n    2635815018: \"IFCDISCRETEACCESSORYTYPE\",\r\n    1945343521: \"IFCDISTANCEEXPRESSION\",\r\n    1052013943: \"IFCDISTRIBUTIONCHAMBERELEMENT\",\r\n    1599208980: \"IFCDISTRIBUTIONCHAMBERELEMENTTYPE\",\r\n    562808652: \"IFCDISTRIBUTIONCIRCUIT\",\r\n    1062813311: \"IFCDISTRIBUTIONCONTROLELEMENT\",\r\n    2063403501: \"IFCDISTRIBUTIONCONTROLELEMENTTYPE\",\r\n    1945004755: \"IFCDISTRIBUTIONELEMENT\",\r\n    3256556792: \"IFCDISTRIBUTIONELEMENTTYPE\",\r\n    3040386961: \"IFCDISTRIBUTIONFLOWELEMENT\",\r\n    3849074793: \"IFCDISTRIBUTIONFLOWELEMENTTYPE\",\r\n    3041715199: \"IFCDISTRIBUTIONPORT\",\r\n    3205830791: \"IFCDISTRIBUTIONSYSTEM\",\r\n    1154170062: \"IFCDOCUMENTINFORMATION\",\r\n    770865208: \"IFCDOCUMENTINFORMATIONRELATIONSHIP\",\r\n    3732053477: \"IFCDOCUMENTREFERENCE\",\r\n    395920057: \"IFCDOOR\",\r\n    2963535650: \"IFCDOORLININGPROPERTIES\",\r\n    1714330368: \"IFCDOORPANELPROPERTIES\",\r\n    3242481149: \"IFCDOORSTANDARDCASE\",\r\n    526551008: \"IFCDOORSTYLE\",\r\n    2323601079: \"IFCDOORTYPE\",\r\n    445594917: \"IFCDRAUGHTINGPREDEFINEDCOLOUR\",\r\n    4006246654: \"IFCDRAUGHTINGPREDEFINEDCURVEFONT\",\r\n    342316401: \"IFCDUCTFITTING\",\r\n    869906466: \"IFCDUCTFITTINGTYPE\",\r\n    3518393246: \"IFCDUCTSEGMENT\",\r\n    3760055223: \"IFCDUCTSEGMENTTYPE\",\r\n    1360408905: \"IFCDUCTSILENCER\",\r\n    2030761528: \"IFCDUCTSILENCERTYPE\",\r\n    3900360178: \"IFCEDGE\",\r\n    476780140: \"IFCEDGECURVE\",\r\n    1472233963: \"IFCEDGELOOP\",\r\n    1904799276: \"IFCELECTRICAPPLIANCE\",\r\n    663422040: \"IFCELECTRICAPPLIANCETYPE\",\r\n    862014818: \"IFCELECTRICDISTRIBUTIONBOARD\",\r\n    2417008758: \"IFCELECTRICDISTRIBUTIONBOARDTYPE\",\r\n    3310460725: \"IFCELECTRICFLOWSTORAGEDEVICE\",\r\n    3277789161: \"IFCELECTRICFLOWSTORAGEDEVICETYPE\",\r\n    264262732: \"IFCELECTRICGENERATOR\",\r\n    1534661035: \"IFCELECTRICGENERATORTYPE\",\r\n    402227799: \"IFCELECTRICMOTOR\",\r\n    1217240411: \"IFCELECTRICMOTORTYPE\",\r\n    1003880860: \"IFCELECTRICTIMECONTROL\",\r\n    712377611: \"IFCELECTRICTIMECONTROLTYPE\",\r\n    1758889154: \"IFCELEMENT\",\r\n    4123344466: \"IFCELEMENTASSEMBLY\",\r\n    2397081782: \"IFCELEMENTASSEMBLYTYPE\",\r\n    1623761950: \"IFCELEMENTCOMPONENT\",\r\n    2590856083: \"IFCELEMENTCOMPONENTTYPE\",\r\n    1883228015: \"IFCELEMENTQUANTITY\",\r\n    339256511: \"IFCELEMENTTYPE\",\r\n    2777663545: \"IFCELEMENTARYSURFACE\",\r\n    1704287377: \"IFCELLIPSE\",\r\n    2835456948: \"IFCELLIPSEPROFILEDEF\",\r\n    1658829314: \"IFCENERGYCONVERSIONDEVICE\",\r\n    2107101300: \"IFCENERGYCONVERSIONDEVICETYPE\",\r\n    2814081492: \"IFCENGINE\",\r\n    132023988: \"IFCENGINETYPE\",\r\n    3747195512: \"IFCEVAPORATIVECOOLER\",\r\n    3174744832: \"IFCEVAPORATIVECOOLERTYPE\",\r\n    484807127: \"IFCEVAPORATOR\",\r\n    3390157468: \"IFCEVAPORATORTYPE\",\r\n    4148101412: \"IFCEVENT\",\r\n    211053100: \"IFCEVENTTIME\",\r\n    4024345920: \"IFCEVENTTYPE\",\r\n    297599258: \"IFCEXTENDEDPROPERTIES\",\r\n    4294318154: \"IFCEXTERNALINFORMATION\",\r\n    3200245327: \"IFCEXTERNALREFERENCE\",\r\n    1437805879: \"IFCEXTERNALREFERENCERELATIONSHIP\",\r\n    1209101575: \"IFCEXTERNALSPATIALELEMENT\",\r\n    2853485674: \"IFCEXTERNALSPATIALSTRUCTUREELEMENT\",\r\n    2242383968: \"IFCEXTERNALLYDEFINEDHATCHSTYLE\",\r\n    1040185647: \"IFCEXTERNALLYDEFINEDSURFACESTYLE\",\r\n    3548104201: \"IFCEXTERNALLYDEFINEDTEXTFONT\",\r\n    477187591: \"IFCEXTRUDEDAREASOLID\",\r\n    2804161546: \"IFCEXTRUDEDAREASOLIDTAPERED\",\r\n    2556980723: \"IFCFACE\",\r\n    2047409740: \"IFCFACEBASEDSURFACEMODEL\",\r\n    1809719519: \"IFCFACEBOUND\",\r\n    803316827: \"IFCFACEOUTERBOUND\",\r\n    3008276851: \"IFCFACESURFACE\",\r\n    807026263: \"IFCFACETEDBREP\",\r\n    3737207727: \"IFCFACETEDBREPWITHVOIDS\",\r\n    24185140: \"IFCFACILITY\",\r\n    1310830890: \"IFCFACILITYPART\",\r\n    4219587988: \"IFCFAILURECONNECTIONCONDITION\",\r\n    3415622556: \"IFCFAN\",\r\n    346874300: \"IFCFANTYPE\",\r\n    647756555: \"IFCFASTENER\",\r\n    2489546625: \"IFCFASTENERTYPE\",\r\n    2827207264: \"IFCFEATUREELEMENT\",\r\n    2143335405: \"IFCFEATUREELEMENTADDITION\",\r\n    1287392070: \"IFCFEATUREELEMENTSUBTRACTION\",\r\n    738692330: \"IFCFILLAREASTYLE\",\r\n    374418227: \"IFCFILLAREASTYLEHATCHING\",\r\n    315944413: \"IFCFILLAREASTYLETILES\",\r\n    819412036: \"IFCFILTER\",\r\n    1810631287: \"IFCFILTERTYPE\",\r\n    1426591983: \"IFCFIRESUPPRESSIONTERMINAL\",\r\n    4222183408: \"IFCFIRESUPPRESSIONTERMINALTYPE\",\r\n    2652556860: \"IFCFIXEDREFERENCESWEPTAREASOLID\",\r\n    2058353004: \"IFCFLOWCONTROLLER\",\r\n    3907093117: \"IFCFLOWCONTROLLERTYPE\",\r\n    4278956645: \"IFCFLOWFITTING\",\r\n    3198132628: \"IFCFLOWFITTINGTYPE\",\r\n    182646315: \"IFCFLOWINSTRUMENT\",\r\n    4037862832: \"IFCFLOWINSTRUMENTTYPE\",\r\n    2188021234: \"IFCFLOWMETER\",\r\n    3815607619: \"IFCFLOWMETERTYPE\",\r\n    3132237377: \"IFCFLOWMOVINGDEVICE\",\r\n    1482959167: \"IFCFLOWMOVINGDEVICETYPE\",\r\n    987401354: \"IFCFLOWSEGMENT\",\r\n    1834744321: \"IFCFLOWSEGMENTTYPE\",\r\n    707683696: \"IFCFLOWSTORAGEDEVICE\",\r\n    1339347760: \"IFCFLOWSTORAGEDEVICETYPE\",\r\n    2223149337: \"IFCFLOWTERMINAL\",\r\n    2297155007: \"IFCFLOWTERMINALTYPE\",\r\n    3508470533: \"IFCFLOWTREATMENTDEVICE\",\r\n    3009222698: \"IFCFLOWTREATMENTDEVICETYPE\",\r\n    900683007: \"IFCFOOTING\",\r\n    1893162501: \"IFCFOOTINGTYPE\",\r\n    263784265: \"IFCFURNISHINGELEMENT\",\r\n    4238390223: \"IFCFURNISHINGELEMENTTYPE\",\r\n    1509553395: \"IFCFURNITURE\",\r\n    1268542332: \"IFCFURNITURETYPE\",\r\n    3493046030: \"IFCGEOGRAPHICELEMENT\",\r\n    4095422895: \"IFCGEOGRAPHICELEMENTTYPE\",\r\n    987898635: \"IFCGEOMETRICCURVESET\",\r\n    3448662350: \"IFCGEOMETRICREPRESENTATIONCONTEXT\",\r\n    2453401579: \"IFCGEOMETRICREPRESENTATIONITEM\",\r\n    4142052618: \"IFCGEOMETRICREPRESENTATIONSUBCONTEXT\",\r\n    3590301190: \"IFCGEOMETRICSET\",\r\n    3009204131: \"IFCGRID\",\r\n    852622518: \"IFCGRIDAXIS\",\r\n    178086475: \"IFCGRIDPLACEMENT\",\r\n    2706460486: \"IFCGROUP\",\r\n    812098782: \"IFCHALFSPACESOLID\",\r\n    3319311131: \"IFCHEATEXCHANGER\",\r\n    1251058090: \"IFCHEATEXCHANGERTYPE\",\r\n    2068733104: \"IFCHUMIDIFIER\",\r\n    1806887404: \"IFCHUMIDIFIERTYPE\",\r\n    1484403080: \"IFCISHAPEPROFILEDEF\",\r\n    3905492369: \"IFCIMAGETEXTURE\",\r\n    3570813810: \"IFCINDEXEDCOLOURMAP\",\r\n    2571569899: \"IFCINDEXEDPOLYCURVE\",\r\n    178912537: \"IFCINDEXEDPOLYGONALFACE\",\r\n    2294589976: \"IFCINDEXEDPOLYGONALFACEWITHVOIDS\",\r\n    1437953363: \"IFCINDEXEDTEXTUREMAP\",\r\n    2133299955: \"IFCINDEXEDTRIANGLETEXTUREMAP\",\r\n    4175244083: \"IFCINTERCEPTOR\",\r\n    3946677679: \"IFCINTERCEPTORTYPE\",\r\n    3113134337: \"IFCINTERSECTIONCURVE\",\r\n    2391368822: \"IFCINVENTORY\",\r\n    3741457305: \"IFCIRREGULARTIMESERIES\",\r\n    3020489413: \"IFCIRREGULARTIMESERIESVALUE\",\r\n    2176052936: \"IFCJUNCTIONBOX\",\r\n    4288270099: \"IFCJUNCTIONBOXTYPE\",\r\n    572779678: \"IFCLSHAPEPROFILEDEF\",\r\n    3827777499: \"IFCLABORRESOURCE\",\r\n    428585644: \"IFCLABORRESOURCETYPE\",\r\n    1585845231: \"IFCLAGTIME\",\r\n    76236018: \"IFCLAMP\",\r\n    1051575348: \"IFCLAMPTYPE\",\r\n    2655187982: \"IFCLIBRARYINFORMATION\",\r\n    3452421091: \"IFCLIBRARYREFERENCE\",\r\n    4162380809: \"IFCLIGHTDISTRIBUTIONDATA\",\r\n    629592764: \"IFCLIGHTFIXTURE\",\r\n    1161773419: \"IFCLIGHTFIXTURETYPE\",\r\n    1566485204: \"IFCLIGHTINTENSITYDISTRIBUTION\",\r\n    1402838566: \"IFCLIGHTSOURCE\",\r\n    125510826: \"IFCLIGHTSOURCEAMBIENT\",\r\n    2604431987: \"IFCLIGHTSOURCEDIRECTIONAL\",\r\n    4266656042: \"IFCLIGHTSOURCEGONIOMETRIC\",\r\n    1520743889: \"IFCLIGHTSOURCEPOSITIONAL\",\r\n    3422422726: \"IFCLIGHTSOURCESPOT\",\r\n    1281925730: \"IFCLINE\",\r\n    3092502836: \"IFCLINESEGMENT2D\",\r\n    388784114: \"IFCLINEARPLACEMENT\",\r\n    1154579445: \"IFCLINEARPOSITIONINGELEMENT\",\r\n    2624227202: \"IFCLOCALPLACEMENT\",\r\n    1008929658: \"IFCLOOP\",\r\n    1425443689: \"IFCMANIFOLDSOLIDBREP\",\r\n    3057273783: \"IFCMAPCONVERSION\",\r\n    2347385850: \"IFCMAPPEDITEM\",\r\n    1838606355: \"IFCMATERIAL\",\r\n    1847130766: \"IFCMATERIALCLASSIFICATIONRELATIONSHIP\",\r\n    3708119000: \"IFCMATERIALCONSTITUENT\",\r\n    2852063980: \"IFCMATERIALCONSTITUENTSET\",\r\n    760658860: \"IFCMATERIALDEFINITION\",\r\n    2022407955: \"IFCMATERIALDEFINITIONREPRESENTATION\",\r\n    248100487: \"IFCMATERIALLAYER\",\r\n    3303938423: \"IFCMATERIALLAYERSET\",\r\n    1303795690: \"IFCMATERIALLAYERSETUSAGE\",\r\n    1847252529: \"IFCMATERIALLAYERWITHOFFSETS\",\r\n    2199411900: \"IFCMATERIALLIST\",\r\n    2235152071: \"IFCMATERIALPROFILE\",\r\n    164193824: \"IFCMATERIALPROFILESET\",\r\n    3079605661: \"IFCMATERIALPROFILESETUSAGE\",\r\n    3404854881: \"IFCMATERIALPROFILESETUSAGETAPERING\",\r\n    552965576: \"IFCMATERIALPROFILEWITHOFFSETS\",\r\n    3265635763: \"IFCMATERIALPROPERTIES\",\r\n    853536259: \"IFCMATERIALRELATIONSHIP\",\r\n    1507914824: \"IFCMATERIALUSAGEDEFINITION\",\r\n    2597039031: \"IFCMEASUREWITHUNIT\",\r\n    377706215: \"IFCMECHANICALFASTENER\",\r\n    2108223431: \"IFCMECHANICALFASTENERTYPE\",\r\n    1437502449: \"IFCMEDICALDEVICE\",\r\n    1114901282: \"IFCMEDICALDEVICETYPE\",\r\n    1073191201: \"IFCMEMBER\",\r\n    1911478936: \"IFCMEMBERSTANDARDCASE\",\r\n    3181161470: \"IFCMEMBERTYPE\",\r\n    3368373690: \"IFCMETRIC\",\r\n    2998442950: \"IFCMIRROREDPROFILEDEF\",\r\n    2706619895: \"IFCMONETARYUNIT\",\r\n    2474470126: \"IFCMOTORCONNECTION\",\r\n    977012517: \"IFCMOTORCONNECTIONTYPE\",\r\n    1918398963: \"IFCNAMEDUNIT\",\r\n    3888040117: \"IFCOBJECT\",\r\n    219451334: \"IFCOBJECTDEFINITION\",\r\n    3701648758: \"IFCOBJECTPLACEMENT\",\r\n    2251480897: \"IFCOBJECTIVE\",\r\n    4143007308: \"IFCOCCUPANT\",\r\n    590820931: \"IFCOFFSETCURVE\",\r\n    3388369263: \"IFCOFFSETCURVE2D\",\r\n    3505215534: \"IFCOFFSETCURVE3D\",\r\n    2485787929: \"IFCOFFSETCURVEBYDISTANCES\",\r\n    2665983363: \"IFCOPENSHELL\",\r\n    3588315303: \"IFCOPENINGELEMENT\",\r\n    3079942009: \"IFCOPENINGSTANDARDCASE\",\r\n    4251960020: \"IFCORGANIZATION\",\r\n    1411181986: \"IFCORGANIZATIONRELATIONSHIP\",\r\n    643959842: \"IFCORIENTATIONEXPRESSION\",\r\n    1029017970: \"IFCORIENTEDEDGE\",\r\n    144952367: \"IFCOUTERBOUNDARYCURVE\",\r\n    3694346114: \"IFCOUTLET\",\r\n    2837617999: \"IFCOUTLETTYPE\",\r\n    1207048766: \"IFCOWNERHISTORY\",\r\n    2529465313: \"IFCPARAMETERIZEDPROFILEDEF\",\r\n    2519244187: \"IFCPATH\",\r\n    1682466193: \"IFCPCURVE\",\r\n    2382730787: \"IFCPERFORMANCEHISTORY\",\r\n    3566463478: \"IFCPERMEABLECOVERINGPROPERTIES\",\r\n    3327091369: \"IFCPERMIT\",\r\n    2077209135: \"IFCPERSON\",\r\n    101040310: \"IFCPERSONANDORGANIZATION\",\r\n    3021840470: \"IFCPHYSICALCOMPLEXQUANTITY\",\r\n    2483315170: \"IFCPHYSICALQUANTITY\",\r\n    2226359599: \"IFCPHYSICALSIMPLEQUANTITY\",\r\n    1687234759: \"IFCPILE\",\r\n    1158309216: \"IFCPILETYPE\",\r\n    310824031: \"IFCPIPEFITTING\",\r\n    804291784: \"IFCPIPEFITTINGTYPE\",\r\n    3612865200: \"IFCPIPESEGMENT\",\r\n    4231323485: \"IFCPIPESEGMENTTYPE\",\r\n    597895409: \"IFCPIXELTEXTURE\",\r\n    2004835150: \"IFCPLACEMENT\",\r\n    603570806: \"IFCPLANARBOX\",\r\n    1663979128: \"IFCPLANAREXTENT\",\r\n    220341763: \"IFCPLANE\",\r\n    3171933400: \"IFCPLATE\",\r\n    1156407060: \"IFCPLATESTANDARDCASE\",\r\n    4017108033: \"IFCPLATETYPE\",\r\n    2067069095: \"IFCPOINT\",\r\n    4022376103: \"IFCPOINTONCURVE\",\r\n    1423911732: \"IFCPOINTONSURFACE\",\r\n    2924175390: \"IFCPOLYLOOP\",\r\n    2775532180: \"IFCPOLYGONALBOUNDEDHALFSPACE\",\r\n    2839578677: \"IFCPOLYGONALFACESET\",\r\n    3724593414: \"IFCPOLYLINE\",\r\n    3740093272: \"IFCPORT\",\r\n    1946335990: \"IFCPOSITIONINGELEMENT\",\r\n    3355820592: \"IFCPOSTALADDRESS\",\r\n    759155922: \"IFCPREDEFINEDCOLOUR\",\r\n    2559016684: \"IFCPREDEFINEDCURVEFONT\",\r\n    3727388367: \"IFCPREDEFINEDITEM\",\r\n    3778827333: \"IFCPREDEFINEDPROPERTIES\",\r\n    3967405729: \"IFCPREDEFINEDPROPERTYSET\",\r\n    1775413392: \"IFCPREDEFINEDTEXTFONT\",\r\n    677532197: \"IFCPRESENTATIONITEM\",\r\n    2022622350: \"IFCPRESENTATIONLAYERASSIGNMENT\",\r\n    1304840413: \"IFCPRESENTATIONLAYERWITHSTYLE\",\r\n    3119450353: \"IFCPRESENTATIONSTYLE\",\r\n    2417041796: \"IFCPRESENTATIONSTYLEASSIGNMENT\",\r\n    2744685151: \"IFCPROCEDURE\",\r\n    569719735: \"IFCPROCEDURETYPE\",\r\n    2945172077: \"IFCPROCESS\",\r\n    4208778838: \"IFCPRODUCT\",\r\n    673634403: \"IFCPRODUCTDEFINITIONSHAPE\",\r\n    2095639259: \"IFCPRODUCTREPRESENTATION\",\r\n    3958567839: \"IFCPROFILEDEF\",\r\n    2802850158: \"IFCPROFILEPROPERTIES\",\r\n    103090709: \"IFCPROJECT\",\r\n    653396225: \"IFCPROJECTLIBRARY\",\r\n    2904328755: \"IFCPROJECTORDER\",\r\n    3843373140: \"IFCPROJECTEDCRS\",\r\n    3651124850: \"IFCPROJECTIONELEMENT\",\r\n    2598011224: \"IFCPROPERTY\",\r\n    986844984: \"IFCPROPERTYABSTRACTION\",\r\n    871118103: \"IFCPROPERTYBOUNDEDVALUE\",\r\n    1680319473: \"IFCPROPERTYDEFINITION\",\r\n    148025276: \"IFCPROPERTYDEPENDENCYRELATIONSHIP\",\r\n    4166981789: \"IFCPROPERTYENUMERATEDVALUE\",\r\n    3710013099: \"IFCPROPERTYENUMERATION\",\r\n    2752243245: \"IFCPROPERTYLISTVALUE\",\r\n    941946838: \"IFCPROPERTYREFERENCEVALUE\",\r\n    1451395588: \"IFCPROPERTYSET\",\r\n    3357820518: \"IFCPROPERTYSETDEFINITION\",\r\n    492091185: \"IFCPROPERTYSETTEMPLATE\",\r\n    3650150729: \"IFCPROPERTYSINGLEVALUE\",\r\n    110355661: \"IFCPROPERTYTABLEVALUE\",\r\n    3521284610: \"IFCPROPERTYTEMPLATE\",\r\n    1482703590: \"IFCPROPERTYTEMPLATEDEFINITION\",\r\n    738039164: \"IFCPROTECTIVEDEVICE\",\r\n    2295281155: \"IFCPROTECTIVEDEVICETRIPPINGUNIT\",\r\n    655969474: \"IFCPROTECTIVEDEVICETRIPPINGUNITTYPE\",\r\n    1842657554: \"IFCPROTECTIVEDEVICETYPE\",\r\n    3219374653: \"IFCPROXY\",\r\n    90941305: \"IFCPUMP\",\r\n    2250791053: \"IFCPUMPTYPE\",\r\n    2044713172: \"IFCQUANTITYAREA\",\r\n    2093928680: \"IFCQUANTITYCOUNT\",\r\n    931644368: \"IFCQUANTITYLENGTH\",\r\n    2090586900: \"IFCQUANTITYSET\",\r\n    3252649465: \"IFCQUANTITYTIME\",\r\n    2405470396: \"IFCQUANTITYVOLUME\",\r\n    825690147: \"IFCQUANTITYWEIGHT\",\r\n    2262370178: \"IFCRAILING\",\r\n    2893384427: \"IFCRAILINGTYPE\",\r\n    3024970846: \"IFCRAMP\",\r\n    3283111854: \"IFCRAMPFLIGHT\",\r\n    2324767716: \"IFCRAMPFLIGHTTYPE\",\r\n    1469900589: \"IFCRAMPTYPE\",\r\n    1232101972: \"IFCRATIONALBSPLINECURVEWITHKNOTS\",\r\n    683857671: \"IFCRATIONALBSPLINESURFACEWITHKNOTS\",\r\n    2770003689: \"IFCRECTANGLEHOLLOWPROFILEDEF\",\r\n    3615266464: \"IFCRECTANGLEPROFILEDEF\",\r\n    2798486643: \"IFCRECTANGULARPYRAMID\",\r\n    3454111270: \"IFCRECTANGULARTRIMMEDSURFACE\",\r\n    3915482550: \"IFCRECURRENCEPATTERN\",\r\n    2433181523: \"IFCREFERENCE\",\r\n    4021432810: \"IFCREFERENT\",\r\n    3413951693: \"IFCREGULARTIMESERIES\",\r\n    1580146022: \"IFCREINFORCEMENTBARPROPERTIES\",\r\n    3765753017: \"IFCREINFORCEMENTDEFINITIONPROPERTIES\",\r\n    979691226: \"IFCREINFORCINGBAR\",\r\n    2572171363: \"IFCREINFORCINGBARTYPE\",\r\n    3027567501: \"IFCREINFORCINGELEMENT\",\r\n    964333572: \"IFCREINFORCINGELEMENTTYPE\",\r\n    2320036040: \"IFCREINFORCINGMESH\",\r\n    2310774935: \"IFCREINFORCINGMESHTYPE\",\r\n    160246688: \"IFCRELAGGREGATES\",\r\n    3939117080: \"IFCRELASSIGNS\",\r\n    1683148259: \"IFCRELASSIGNSTOACTOR\",\r\n    2495723537: \"IFCRELASSIGNSTOCONTROL\",\r\n    1307041759: \"IFCRELASSIGNSTOGROUP\",\r\n    1027710054: \"IFCRELASSIGNSTOGROUPBYFACTOR\",\r\n    4278684876: \"IFCRELASSIGNSTOPROCESS\",\r\n    2857406711: \"IFCRELASSIGNSTOPRODUCT\",\r\n    205026976: \"IFCRELASSIGNSTORESOURCE\",\r\n    1865459582: \"IFCRELASSOCIATES\",\r\n    4095574036: \"IFCRELASSOCIATESAPPROVAL\",\r\n    919958153: \"IFCRELASSOCIATESCLASSIFICATION\",\r\n    2728634034: \"IFCRELASSOCIATESCONSTRAINT\",\r\n    982818633: \"IFCRELASSOCIATESDOCUMENT\",\r\n    3840914261: \"IFCRELASSOCIATESLIBRARY\",\r\n    2655215786: \"IFCRELASSOCIATESMATERIAL\",\r\n    826625072: \"IFCRELCONNECTS\",\r\n    1204542856: \"IFCRELCONNECTSELEMENTS\",\r\n    3945020480: \"IFCRELCONNECTSPATHELEMENTS\",\r\n    4201705270: \"IFCRELCONNECTSPORTTOELEMENT\",\r\n    3190031847: \"IFCRELCONNECTSPORTS\",\r\n    2127690289: \"IFCRELCONNECTSSTRUCTURALACTIVITY\",\r\n    1638771189: \"IFCRELCONNECTSSTRUCTURALMEMBER\",\r\n    504942748: \"IFCRELCONNECTSWITHECCENTRICITY\",\r\n    3678494232: \"IFCRELCONNECTSWITHREALIZINGELEMENTS\",\r\n    3242617779: \"IFCRELCONTAINEDINSPATIALSTRUCTURE\",\r\n    886880790: \"IFCRELCOVERSBLDGELEMENTS\",\r\n    2802773753: \"IFCRELCOVERSSPACES\",\r\n    2565941209: \"IFCRELDECLARES\",\r\n    2551354335: \"IFCRELDECOMPOSES\",\r\n    693640335: \"IFCRELDEFINES\",\r\n    1462361463: \"IFCRELDEFINESBYOBJECT\",\r\n    4186316022: \"IFCRELDEFINESBYPROPERTIES\",\r\n    307848117: \"IFCRELDEFINESBYTEMPLATE\",\r\n    781010003: \"IFCRELDEFINESBYTYPE\",\r\n    3940055652: \"IFCRELFILLSELEMENT\",\r\n    279856033: \"IFCRELFLOWCONTROLELEMENTS\",\r\n    427948657: \"IFCRELINTERFERESELEMENTS\",\r\n    3268803585: \"IFCRELNESTS\",\r\n    1441486842: \"IFCRELPOSITIONS\",\r\n    750771296: \"IFCRELPROJECTSELEMENT\",\r\n    1245217292: \"IFCRELREFERENCEDINSPATIALSTRUCTURE\",\r\n    4122056220: \"IFCRELSEQUENCE\",\r\n    366585022: \"IFCRELSERVICESBUILDINGS\",\r\n    3451746338: \"IFCRELSPACEBOUNDARY\",\r\n    3523091289: \"IFCRELSPACEBOUNDARY1STLEVEL\",\r\n    1521410863: \"IFCRELSPACEBOUNDARY2NDLEVEL\",\r\n    1401173127: \"IFCRELVOIDSELEMENT\",\r\n    478536968: \"IFCRELATIONSHIP\",\r\n    816062949: \"IFCREPARAMETRISEDCOMPOSITECURVESEGMENT\",\r\n    1076942058: \"IFCREPRESENTATION\",\r\n    3377609919: \"IFCREPRESENTATIONCONTEXT\",\r\n    3008791417: \"IFCREPRESENTATIONITEM\",\r\n    1660063152: \"IFCREPRESENTATIONMAP\",\r\n    2914609552: \"IFCRESOURCE\",\r\n    2943643501: \"IFCRESOURCEAPPROVALRELATIONSHIP\",\r\n    1608871552: \"IFCRESOURCECONSTRAINTRELATIONSHIP\",\r\n    2439245199: \"IFCRESOURCELEVELRELATIONSHIP\",\r\n    1042787934: \"IFCRESOURCETIME\",\r\n    1856042241: \"IFCREVOLVEDAREASOLID\",\r\n    3243963512: \"IFCREVOLVEDAREASOLIDTAPERED\",\r\n    4158566097: \"IFCRIGHTCIRCULARCONE\",\r\n    3626867408: \"IFCRIGHTCIRCULARCYLINDER\",\r\n    2016517767: \"IFCROOF\",\r\n    2781568857: \"IFCROOFTYPE\",\r\n    2341007311: \"IFCROOT\",\r\n    2778083089: \"IFCROUNDEDRECTANGLEPROFILEDEF\",\r\n    448429030: \"IFCSIUNIT\",\r\n    3053780830: \"IFCSANITARYTERMINAL\",\r\n    1768891740: \"IFCSANITARYTERMINALTYPE\",\r\n    1054537805: \"IFCSCHEDULINGTIME\",\r\n    2157484638: \"IFCSEAMCURVE\",\r\n    2042790032: \"IFCSECTIONPROPERTIES\",\r\n    4165799628: \"IFCSECTIONREINFORCEMENTPROPERTIES\",\r\n    1862484736: \"IFCSECTIONEDSOLID\",\r\n    1290935644: \"IFCSECTIONEDSOLIDHORIZONTAL\",\r\n    1509187699: \"IFCSECTIONEDSPINE\",\r\n    4086658281: \"IFCSENSOR\",\r\n    1783015770: \"IFCSENSORTYPE\",\r\n    1329646415: \"IFCSHADINGDEVICE\",\r\n    4074543187: \"IFCSHADINGDEVICETYPE\",\r\n    867548509: \"IFCSHAPEASPECT\",\r\n    3982875396: \"IFCSHAPEMODEL\",\r\n    4240577450: \"IFCSHAPEREPRESENTATION\",\r\n    4124623270: \"IFCSHELLBASEDSURFACEMODEL\",\r\n    3692461612: \"IFCSIMPLEPROPERTY\",\r\n    3663146110: \"IFCSIMPLEPROPERTYTEMPLATE\",\r\n    4097777520: \"IFCSITE\",\r\n    1529196076: \"IFCSLAB\",\r\n    3127900445: \"IFCSLABELEMENTEDCASE\",\r\n    3027962421: \"IFCSLABSTANDARDCASE\",\r\n    2533589738: \"IFCSLABTYPE\",\r\n    2609359061: \"IFCSLIPPAGECONNECTIONCONDITION\",\r\n    3420628829: \"IFCSOLARDEVICE\",\r\n    1072016465: \"IFCSOLARDEVICETYPE\",\r\n    723233188: \"IFCSOLIDMODEL\",\r\n    3856911033: \"IFCSPACE\",\r\n    1999602285: \"IFCSPACEHEATER\",\r\n    1305183839: \"IFCSPACEHEATERTYPE\",\r\n    3812236995: \"IFCSPACETYPE\",\r\n    1412071761: \"IFCSPATIALELEMENT\",\r\n    710998568: \"IFCSPATIALELEMENTTYPE\",\r\n    2706606064: \"IFCSPATIALSTRUCTUREELEMENT\",\r\n    3893378262: \"IFCSPATIALSTRUCTUREELEMENTTYPE\",\r\n    463610769: \"IFCSPATIALZONE\",\r\n    2481509218: \"IFCSPATIALZONETYPE\",\r\n    451544542: \"IFCSPHERE\",\r\n    4015995234: \"IFCSPHERICALSURFACE\",\r\n    1404847402: \"IFCSTACKTERMINAL\",\r\n    3112655638: \"IFCSTACKTERMINALTYPE\",\r\n    331165859: \"IFCSTAIR\",\r\n    4252922144: \"IFCSTAIRFLIGHT\",\r\n    1039846685: \"IFCSTAIRFLIGHTTYPE\",\r\n    338393293: \"IFCSTAIRTYPE\",\r\n    682877961: \"IFCSTRUCTURALACTION\",\r\n    3544373492: \"IFCSTRUCTURALACTIVITY\",\r\n    2515109513: \"IFCSTRUCTURALANALYSISMODEL\",\r\n    1179482911: \"IFCSTRUCTURALCONNECTION\",\r\n    2273995522: \"IFCSTRUCTURALCONNECTIONCONDITION\",\r\n    1004757350: \"IFCSTRUCTURALCURVEACTION\",\r\n    4243806635: \"IFCSTRUCTURALCURVECONNECTION\",\r\n    214636428: \"IFCSTRUCTURALCURVEMEMBER\",\r\n    2445595289: \"IFCSTRUCTURALCURVEMEMBERVARYING\",\r\n    2757150158: \"IFCSTRUCTURALCURVEREACTION\",\r\n    3136571912: \"IFCSTRUCTURALITEM\",\r\n    1807405624: \"IFCSTRUCTURALLINEARACTION\",\r\n    2162789131: \"IFCSTRUCTURALLOAD\",\r\n    385403989: \"IFCSTRUCTURALLOADCASE\",\r\n    3478079324: \"IFCSTRUCTURALLOADCONFIGURATION\",\r\n    1252848954: \"IFCSTRUCTURALLOADGROUP\",\r\n    1595516126: \"IFCSTRUCTURALLOADLINEARFORCE\",\r\n    609421318: \"IFCSTRUCTURALLOADORRESULT\",\r\n    2668620305: \"IFCSTRUCTURALLOADPLANARFORCE\",\r\n    2473145415: \"IFCSTRUCTURALLOADSINGLEDISPLACEMENT\",\r\n    1973038258: \"IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION\",\r\n    1597423693: \"IFCSTRUCTURALLOADSINGLEFORCE\",\r\n    1190533807: \"IFCSTRUCTURALLOADSINGLEFORCEWARPING\",\r\n    2525727697: \"IFCSTRUCTURALLOADSTATIC\",\r\n    3408363356: \"IFCSTRUCTURALLOADTEMPERATURE\",\r\n    530289379: \"IFCSTRUCTURALMEMBER\",\r\n    1621171031: \"IFCSTRUCTURALPLANARACTION\",\r\n    2082059205: \"IFCSTRUCTURALPOINTACTION\",\r\n    734778138: \"IFCSTRUCTURALPOINTCONNECTION\",\r\n    1235345126: \"IFCSTRUCTURALPOINTREACTION\",\r\n    3689010777: \"IFCSTRUCTURALREACTION\",\r\n    2986769608: \"IFCSTRUCTURALRESULTGROUP\",\r\n    3657597509: \"IFCSTRUCTURALSURFACEACTION\",\r\n    1975003073: \"IFCSTRUCTURALSURFACECONNECTION\",\r\n    3979015343: \"IFCSTRUCTURALSURFACEMEMBER\",\r\n    2218152070: \"IFCSTRUCTURALSURFACEMEMBERVARYING\",\r\n    603775116: \"IFCSTRUCTURALSURFACEREACTION\",\r\n    2830218821: \"IFCSTYLEMODEL\",\r\n    3958052878: \"IFCSTYLEDITEM\",\r\n    3049322572: \"IFCSTYLEDREPRESENTATION\",\r\n    148013059: \"IFCSUBCONTRACTRESOURCE\",\r\n    4095615324: \"IFCSUBCONTRACTRESOURCETYPE\",\r\n    2233826070: \"IFCSUBEDGE\",\r\n    2513912981: \"IFCSURFACE\",\r\n    699246055: \"IFCSURFACECURVE\",\r\n    2028607225: \"IFCSURFACECURVESWEPTAREASOLID\",\r\n    3101698114: \"IFCSURFACEFEATURE\",\r\n    2809605785: \"IFCSURFACEOFLINEAREXTRUSION\",\r\n    4124788165: \"IFCSURFACEOFREVOLUTION\",\r\n    2934153892: \"IFCSURFACEREINFORCEMENTAREA\",\r\n    1300840506: \"IFCSURFACESTYLE\",\r\n    3303107099: \"IFCSURFACESTYLELIGHTING\",\r\n    1607154358: \"IFCSURFACESTYLEREFRACTION\",\r\n    1878645084: \"IFCSURFACESTYLERENDERING\",\r\n    846575682: \"IFCSURFACESTYLESHADING\",\r\n    1351298697: \"IFCSURFACESTYLEWITHTEXTURES\",\r\n    626085974: \"IFCSURFACETEXTURE\",\r\n    2247615214: \"IFCSWEPTAREASOLID\",\r\n    1260650574: \"IFCSWEPTDISKSOLID\",\r\n    1096409881: \"IFCSWEPTDISKSOLIDPOLYGONAL\",\r\n    230924584: \"IFCSWEPTSURFACE\",\r\n    1162798199: \"IFCSWITCHINGDEVICE\",\r\n    2315554128: \"IFCSWITCHINGDEVICETYPE\",\r\n    2254336722: \"IFCSYSTEM\",\r\n    413509423: \"IFCSYSTEMFURNITUREELEMENT\",\r\n    1580310250: \"IFCSYSTEMFURNITUREELEMENTTYPE\",\r\n    3071757647: \"IFCTSHAPEPROFILEDEF\",\r\n    985171141: \"IFCTABLE\",\r\n    2043862942: \"IFCTABLECOLUMN\",\r\n    531007025: \"IFCTABLEROW\",\r\n    812556717: \"IFCTANK\",\r\n    5716631: \"IFCTANKTYPE\",\r\n    3473067441: \"IFCTASK\",\r\n    1549132990: \"IFCTASKTIME\",\r\n    2771591690: \"IFCTASKTIMERECURRING\",\r\n    3206491090: \"IFCTASKTYPE\",\r\n    912023232: \"IFCTELECOMADDRESS\",\r\n    3824725483: \"IFCTENDON\",\r\n    2347447852: \"IFCTENDONANCHOR\",\r\n    3081323446: \"IFCTENDONANCHORTYPE\",\r\n    3663046924: \"IFCTENDONCONDUIT\",\r\n    2281632017: \"IFCTENDONCONDUITTYPE\",\r\n    2415094496: \"IFCTENDONTYPE\",\r\n    2387106220: \"IFCTESSELLATEDFACESET\",\r\n    901063453: \"IFCTESSELLATEDITEM\",\r\n    4282788508: \"IFCTEXTLITERAL\",\r\n    3124975700: \"IFCTEXTLITERALWITHEXTENT\",\r\n    1447204868: \"IFCTEXTSTYLE\",\r\n    1983826977: \"IFCTEXTSTYLEFONTMODEL\",\r\n    2636378356: \"IFCTEXTSTYLEFORDEFINEDFONT\",\r\n    1640371178: \"IFCTEXTSTYLETEXTMODEL\",\r\n    280115917: \"IFCTEXTURECOORDINATE\",\r\n    1742049831: \"IFCTEXTURECOORDINATEGENERATOR\",\r\n    2552916305: \"IFCTEXTUREMAP\",\r\n    1210645708: \"IFCTEXTUREVERTEX\",\r\n    3611470254: \"IFCTEXTUREVERTEXLIST\",\r\n    1199560280: \"IFCTIMEPERIOD\",\r\n    3101149627: \"IFCTIMESERIES\",\r\n    581633288: \"IFCTIMESERIESVALUE\",\r\n    1377556343: \"IFCTOPOLOGICALREPRESENTATIONITEM\",\r\n    1735638870: \"IFCTOPOLOGYREPRESENTATION\",\r\n    1935646853: \"IFCTOROIDALSURFACE\",\r\n    3825984169: \"IFCTRANSFORMER\",\r\n    1692211062: \"IFCTRANSFORMERTYPE\",\r\n    2595432518: \"IFCTRANSITIONCURVESEGMENT2D\",\r\n    1620046519: \"IFCTRANSPORTELEMENT\",\r\n    2097647324: \"IFCTRANSPORTELEMENTTYPE\",\r\n    2715220739: \"IFCTRAPEZIUMPROFILEDEF\",\r\n    2916149573: \"IFCTRIANGULATEDFACESET\",\r\n    1229763772: \"IFCTRIANGULATEDIRREGULARNETWORK\",\r\n    3593883385: \"IFCTRIMMEDCURVE\",\r\n    3026737570: \"IFCTUBEBUNDLE\",\r\n    1600972822: \"IFCTUBEBUNDLETYPE\",\r\n    1628702193: \"IFCTYPEOBJECT\",\r\n    3736923433: \"IFCTYPEPROCESS\",\r\n    2347495698: \"IFCTYPEPRODUCT\",\r\n    3698973494: \"IFCTYPERESOURCE\",\r\n    427810014: \"IFCUSHAPEPROFILEDEF\",\r\n    180925521: \"IFCUNITASSIGNMENT\",\r\n    630975310: \"IFCUNITARYCONTROLELEMENT\",\r\n    3179687236: \"IFCUNITARYCONTROLELEMENTTYPE\",\r\n    4292641817: \"IFCUNITARYEQUIPMENT\",\r\n    1911125066: \"IFCUNITARYEQUIPMENTTYPE\",\r\n    4207607924: \"IFCVALVE\",\r\n    728799441: \"IFCVALVETYPE\",\r\n    1417489154: \"IFCVECTOR\",\r\n    2799835756: \"IFCVERTEX\",\r\n    2759199220: \"IFCVERTEXLOOP\",\r\n    1907098498: \"IFCVERTEXPOINT\",\r\n    1530820697: \"IFCVIBRATIONDAMPER\",\r\n    3956297820: \"IFCVIBRATIONDAMPERTYPE\",\r\n    2391383451: \"IFCVIBRATIONISOLATOR\",\r\n    3313531582: \"IFCVIBRATIONISOLATORTYPE\",\r\n    2769231204: \"IFCVIRTUALELEMENT\",\r\n    891718957: \"IFCVIRTUALGRIDINTERSECTION\",\r\n    926996030: \"IFCVOIDINGFEATURE\",\r\n    2391406946: \"IFCWALL\",\r\n    4156078855: \"IFCWALLELEMENTEDCASE\",\r\n    3512223829: \"IFCWALLSTANDARDCASE\",\r\n    1898987631: \"IFCWALLTYPE\",\r\n    4237592921: \"IFCWASTETERMINAL\",\r\n    1133259667: \"IFCWASTETERMINALTYPE\",\r\n    3304561284: \"IFCWINDOW\",\r\n    336235671: \"IFCWINDOWLININGPROPERTIES\",\r\n    512836454: \"IFCWINDOWPANELPROPERTIES\",\r\n    486154966: \"IFCWINDOWSTANDARDCASE\",\r\n    1299126871: \"IFCWINDOWSTYLE\",\r\n    4009809668: \"IFCWINDOWTYPE\",\r\n    4088093105: \"IFCWORKCALENDAR\",\r\n    1028945134: \"IFCWORKCONTROL\",\r\n    4218914973: \"IFCWORKPLAN\",\r\n    3342526732: \"IFCWORKSCHEDULE\",\r\n    1236880293: \"IFCWORKTIME\",\r\n    2543172580: \"IFCZSHAPEPROFILEDEF\",\r\n    1033361043: \"IFCZONE\",\r\n}","import { IdAttrName, JSONObject } from '../BaseDefinitions';\r\nimport { Node, IfcState, PropsNames, pName } from '../BaseDefinitions';\r\nimport { IfcElements } from './IFCElementsMap';\r\nimport { IFCPROJECT } from 'web-ifc';\r\nimport { BufferGeometry } from 'three';\r\nimport { IfcTypesMap } from './IfcTypesMap';\r\n\r\n/**\r\n * Contains the logic to get the properties of the items within an IFC model.\r\n */\r\nexport class PropertyManager {\r\n    private state: IfcState;\r\n\r\n    constructor(state: IfcState) {\r\n        this.state = state;\r\n    }\r\n\r\n    getExpressId(geometry: BufferGeometry, faceIndex: number) {\r\n        if (!geometry.index) return;\r\n        const geoIndex = geometry.index.array;\r\n        return geometry.attributes[IdAttrName].getX(geoIndex[3 * faceIndex]);\r\n    }\r\n\r\n    getItemProperties(modelID: number, id: number, recursive = false) {\r\n        return this.state.useJSON ?\r\n            { ...this.state.models[modelID].jsonData[id] } :\r\n            this.state.api.GetLine(modelID, id, recursive);\r\n    }\r\n\r\n    getAllItemsOfType(modelID: number, type: number, verbose: boolean) {\r\n        return this.state.useJSON ?\r\n            this.getAllItemsOfTypeJSON(modelID, type, verbose) :\r\n            this.getAllItemsOfTypeWebIfcAPI(modelID, type, verbose);\r\n    }\r\n\r\n    getPropertySets(modelID: number, elementID: number, recursive = false) {\r\n        return this.state.useJSON ?\r\n            this.getPropertyJSON(modelID, elementID, recursive, PropsNames.psets) :\r\n            this.getPropertyWebIfcAPI(modelID, elementID, recursive, PropsNames.psets);\r\n    }\r\n\r\n    getTypeProperties(modelID: number, elementID: number, recursive = false) {\r\n        return this.state.useJSON ?\r\n            this.getPropertyJSON(modelID, elementID, recursive, PropsNames.type) :\r\n            this.getPropertyWebIfcAPI(modelID, elementID, recursive, PropsNames.type);\r\n    }\r\n\r\n    getMaterialsProperties(modelID: number, elementID: number, recursive = false) {\r\n        return this.state.useJSON ?\r\n            this.getPropertyJSON(modelID, elementID, recursive, PropsNames.materials) :\r\n            this.getPropertyWebIfcAPI(modelID, elementID, recursive, PropsNames.materials);\r\n    }\r\n\r\n    getSpatialStructure(modelID: number, includeProperties?: boolean) {\r\n        if(!this.state.useJSON && includeProperties){\r\n            console.warn(\"Including properties in getSpatialStructure with the JSON workflow disabled can lead to poor performance.\")\r\n        }\r\n\r\n        return this.state.useJSON ?\r\n            this.getSpatialStructureJSON(modelID, includeProperties) :\r\n            this.getSpatialStructureWebIfcAPI(modelID, includeProperties);\r\n    }\r\n\r\n    private getSpatialStructureJSON(modelID: number, includeProperties?: boolean) {\r\n        const chunks = this.getSpatialTreeChunks(modelID);\r\n        const projectID = this.getAllItemsOfTypeJSON(modelID, IFCPROJECT, false)[0];\r\n        const project = this.newIfcProject(projectID);\r\n        this.getSpatialNode(modelID, project, chunks, includeProperties);\r\n        return { ...project };\r\n    }\r\n\r\n    private getSpatialStructureWebIfcAPI(modelID: number, includeProperties?: boolean) {\r\n        const chunks = this.getSpatialTreeChunks(modelID);\r\n        const projectID = this.state.api.GetLineIDsWithType(modelID, IFCPROJECT).get(0);\r\n        const project = this.newIfcProject(projectID);\r\n        this.getSpatialNode(modelID, project, chunks, includeProperties);\r\n        return project;\r\n    }\r\n\r\n    private getAllItemsOfTypeJSON(modelID: number, type: number, verbose: boolean) {\r\n        const data = this.state.models[modelID].jsonData;\r\n        const typeName = IfcTypesMap[type];\r\n        if (!typeName) {\r\n            throw new Error(`Type not found: ${type}`);\r\n        }\r\n        return this.filterJSONItemsByType(data, typeName, verbose);\r\n    }\r\n\r\n    private filterJSONItemsByType(data: { [id: number]: JSONObject }, typeName: string, verbose: boolean) {\r\n        const result: any[] = [];\r\n        Object.keys(data).forEach(key => {\r\n            const numKey = parseInt(key);\r\n            if (data[numKey].type.toUpperCase() === typeName) {\r\n                result.push(verbose ? { ...data[numKey] } : numKey);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    private getItemsByIDJSON(modelID: number, ids: number[]) {\r\n        const data = this.state.models[modelID].jsonData;\r\n        const result: any[] = [];\r\n        ids.forEach(id => result.push({ ...data[id] }));\r\n        return result;\r\n    }\r\n\r\n    private getPropertyJSON(modelID: number, elementID: number, recursive = false, propName: pName) {\r\n        const resultIDs = this.getAllRelatedItemsOfTypeJSON(modelID, elementID, propName);\r\n        const result = this.getItemsByIDJSON(modelID, resultIDs);\r\n        if (recursive) {\r\n            result.forEach(result => this.getJSONReferencesRecursively(modelID, result));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private getJSONReferencesRecursively(modelID: number, jsonObject: any) {\r\n        if (jsonObject == undefined) return;\r\n        const keys = Object.keys(jsonObject);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            const key = keys[i];\r\n            this.getJSONItem(modelID, jsonObject, key);\r\n        }\r\n    }\r\n\r\n    private getJSONItem(modelID: number, jsonObject: any, key: string) {\r\n        if (Array.isArray(jsonObject[key])) {\r\n            return this.getMultipleJSONItems(modelID, jsonObject, key);\r\n        }\r\n        if (jsonObject[key] && jsonObject[key].type === 5) {\r\n            jsonObject[key] = this.getItemsByIDJSON(modelID, [jsonObject[key].value])[0];\r\n            this.getJSONReferencesRecursively(modelID, jsonObject[key]);\r\n        }\r\n    }\r\n\r\n    private getMultipleJSONItems(modelID: number, jsonObject: any, key: string) {\r\n        jsonObject[key] = jsonObject[key].map((item: any) => {\r\n            if (item.type === 5) {\r\n                item = this.getItemsByIDJSON(modelID, [item.value])[0];\r\n                this.getJSONReferencesRecursively(modelID, item);\r\n            }\r\n            return item;\r\n        });\r\n    }\r\n\r\n    private getPropertyWebIfcAPI(modelID: number, elementID: number, recursive = false, propName: pName) {\r\n        const propSetIds = this.getAllRelatedItemsOfTypeWebIfcAPI(modelID, elementID, propName);\r\n        return propSetIds.map((id) => this.state.api.GetLine(modelID, id, recursive));\r\n    }\r\n\r\n    private getAllItemsOfTypeWebIfcAPI(modelID: number, type: number, verbose: boolean) {\r\n        const items: number[] = [];\r\n        const lines = this.state.api.GetLineIDsWithType(modelID, type);\r\n        for (let i = 0; i < lines.size(); i++) items.push(lines.get(i));\r\n        if (verbose) return items.map((id) => this.state.api.GetLine(modelID, id));\r\n        return items;\r\n    }\r\n\r\n    private newIfcProject(id: number) {\r\n        return {\r\n            expressID: id,\r\n            type: 'IFCPROJECT',\r\n            children: []\r\n        };\r\n    }\r\n\r\n    private getSpatialTreeChunks(modelID: number) {\r\n        const treeChunks: any = {};\r\n        const json = this.state.useJSON;\r\n        if (json) {\r\n            this.getChunksJSON(modelID, treeChunks, PropsNames.aggregates);\r\n            this.getChunksJSON(modelID, treeChunks, PropsNames.spatial);\r\n        } else {\r\n            this.getChunksWebIfcAPI(modelID, treeChunks, PropsNames.aggregates);\r\n            this.getChunksWebIfcAPI(modelID, treeChunks, PropsNames.spatial);\r\n        }\r\n        return treeChunks;\r\n    }\r\n\r\n    private getChunksJSON(modelID: number, chunks: any, propNames: pName) {\r\n        const relation = this.getAllItemsOfTypeJSON(modelID, propNames.name, true);\r\n        relation.forEach(rel => {\r\n            this.saveChunk(chunks, propNames, rel);\r\n        });\r\n    }\r\n\r\n    private getChunksWebIfcAPI(modelID: number, chunks: any, propNames: pName) {\r\n        const relation = this.state.api.GetLineIDsWithType(modelID, propNames.name);\r\n        for (let i = 0; i < relation.size(); i++) {\r\n            const rel = this.state.api.GetLine(modelID, relation.get(i), false);\r\n            this.saveChunk(chunks, propNames, rel);\r\n        }\r\n    }\r\n\r\n    private saveChunk(chunks: any, propNames: pName, rel: any) {\r\n        const relating = rel[propNames.relating].value;\r\n        const related = rel[propNames.related].map((r: any) => r.value);\r\n        if (chunks[relating] == undefined) {\r\n            chunks[relating] = related;\r\n        } else {\r\n            chunks[relating] = chunks[relating].concat(related);\r\n        }\r\n    }\r\n\r\n    private getSpatialNode(modelID: number, node: Node, treeChunks: any, includeProperties?: boolean) {\r\n        this.getChildren(modelID, node, treeChunks, PropsNames.aggregates, includeProperties);\r\n        this.getChildren(modelID, node, treeChunks, PropsNames.spatial, includeProperties);\r\n    }\r\n\r\n    private getChildren(modelID: number, node: Node, treeChunks: any, propNames: pName, includeProperties?: boolean) {\r\n        const children = treeChunks[node.expressID];\r\n        if (children == undefined) return;\r\n        const prop = propNames.key as keyof Node;\r\n        (node[prop] as Node[]) = children.map((child: number) => {\r\n            let node = this.newNode(modelID, child);\r\n            if(includeProperties){\r\n                const properties = this.getItemProperties(modelID, node.expressID);\r\n                node = { ...node, ...properties }\r\n            }\r\n            this.getSpatialNode(modelID, node, treeChunks, includeProperties);\r\n            return node;\r\n        });\r\n    }\r\n\r\n    private newNode(modelID: number, id: number) {\r\n        const typeName = this.getNodeType(modelID, id);\r\n        return {\r\n            expressID: id,\r\n            type: typeName,\r\n            children: []\r\n        };\r\n    }\r\n\r\n    private getNodeType(modelID: number, id: number) {\r\n        if(this.state.useJSON) return this.state.models[modelID].jsonData[id].type;\r\n        const typeID = this.state.models[modelID].types[id];\r\n        return IfcElements[typeID];\r\n    }\r\n\r\n    private getAllRelatedItemsOfTypeJSON(modelID: number, id: number, propNames: pName) {\r\n        const lines = this.getAllItemsOfTypeJSON(modelID, propNames.name, true);\r\n        const IDs: number[] = [];\r\n        lines.forEach(line => {\r\n            const isRelated = this.isRelated(id, line, propNames);\r\n            if (isRelated) this.getRelated(line, propNames, IDs);\r\n        });\r\n        return IDs;\r\n    }\r\n\r\n    private getAllRelatedItemsOfTypeWebIfcAPI(modelID: number, id: number, propNames: pName) {\r\n        const lines = this.state.api.GetLineIDsWithType(modelID, propNames.name);\r\n        const IDs: number[] = [];\r\n        for (let i = 0; i < lines.size(); i++) {\r\n            const rel = this.state.api.GetLine(modelID, lines.get(i));\r\n            const isRelated = this.isRelated(id, rel, propNames);\r\n            if (isRelated) this.getRelated(rel, propNames, IDs);\r\n        }\r\n        return IDs;\r\n    }\r\n\r\n    private getRelated(rel: any, propNames: pName, IDs: number[]) {\r\n        const element = rel[propNames.relating];\r\n        if (!Array.isArray(element)) IDs.push(element.value);\r\n        else element.forEach((ele) => IDs.push(ele.value));\r\n    }\r\n\r\n    private isRelated(id: number, rel: any, propNames: pName) {\r\n        const relatedItems = rel[propNames.related];\r\n        if (Array.isArray(relatedItems)) {\r\n            const values = relatedItems.map((item) => item.value);\r\n            return values.includes(id);\r\n        }\r\n        return relatedItems.value === id;\r\n    }\r\n}\r\n","import { IfcState, SelectedItems } from '../BaseDefinitions';\r\nimport { IfcElements } from './IFCElementsMap'\r\n\r\n/**\r\n * Contains the logic to manage the type (e. g. IfcWall, IfcWindow, IfcDoor) of\r\n * all the items within an IFC file.\r\n */\r\nexport class TypeManager {\r\n    private state: IfcState;\r\n\r\n    constructor(state: IfcState) {\r\n        this.state = state;\r\n    }\r\n\r\n    getAllTypes(){\r\n        for(let modelID in this.state.models){\r\n            const types = this.state.models[modelID].types;\r\n            if(Object.keys(types).length == 0) this.getAllTypesOfModel(parseInt(modelID));\r\n        }\r\n    }\r\n\r\n    getAllTypesOfModel(modelID: number) {\r\n        this.state.models[modelID].types;\r\n        const elements = Object.keys(IfcElements).map((e) => parseInt(e));\r\n        const types = this.state.models[modelID].types; \r\n        elements.forEach((type) => {\r\n            const lines = this.state.api.GetLineIDsWithType(modelID, type);\r\n            //@ts-ignore\r\n            for (let i = 0; i < lines.size(); i++) types[lines.get(i)] = type;\r\n        });\r\n    }\r\n}\r\n","import { IfcState, SelectedItems } from '../BaseDefinitions';\r\nimport { BufferGeometry, Mesh } from 'three';\r\n\r\nexport class BvhManager {\r\n    private computeBoundsTree?: any;\r\n    private disposeBoundsTree?: any;\r\n    private acceleratedRaycast?: any;\r\n\r\n    initializeMeshBVH(computeBoundsTree: any, disposeBoundsTree: any, acceleratedRaycast: any) {\r\n        this.computeBoundsTree = computeBoundsTree;\r\n        this.disposeBoundsTree = disposeBoundsTree;\r\n        this.acceleratedRaycast = acceleratedRaycast;\r\n        this.setupThreeMeshBVH();\r\n    }\r\n\r\n    applyThreeMeshBVH(geometry: BufferGeometry) {\r\n        if (this.computeBoundsTree)\r\n            //@ts-ignore\r\n            geometry.computeBoundsTree();\r\n    }\r\n\r\n    private setupThreeMeshBVH() {\r\n        if (!this.computeBoundsTree || !this.disposeBoundsTree || !this.acceleratedRaycast) return;\r\n        //@ts-ignore\r\n        BufferGeometry.prototype.computeBoundsTree = this.computeBoundsTree;\r\n        //@ts-ignore\r\n        BufferGeometry.prototype.disposeBoundsTree = this.disposeBoundsTree;\r\n        Mesh.prototype.raycast = this.acceleratedRaycast;\r\n    }\r\n}","import { IfcState } from '../BaseDefinitions';\r\n\r\nexport class ItemsHider {\r\n    private state: IfcState;\r\n    private modelCoordinates: { [modelID: number]: Float32Array } = {};\r\n    private expressIDCoordinatesMap: {\r\n        [modelID: number]: {\r\n            [id: number]: number[];\r\n        }\r\n    } = {};\r\n\r\n    constructor(state: IfcState) {\r\n        this.state = state;\r\n    };\r\n\r\n    dispose() {\r\n        this.modelCoordinates = {};\r\n        this.expressIDCoordinatesMap = {};\r\n    }\r\n\r\n    processCoordinates(modelID: number) {\r\n        const attributes = this.getAttributes(modelID);\r\n        const ids = Array.from(attributes.expressID.array);\r\n        this.expressIDCoordinatesMap[modelID] = {};\r\n        for (let i = 0; i < ids.length; i++) {\r\n            if (!this.expressIDCoordinatesMap[modelID][ids[i]]) {\r\n                this.expressIDCoordinatesMap[modelID][ids[i]] = [];\r\n            }\r\n            const current = this.expressIDCoordinatesMap[modelID];\r\n            current[ids[i]].push(3 * i);\r\n        }\r\n        this.initializeCoordinates(modelID);\r\n    }\r\n\r\n    hideItems(modelID: number, ids: number[]) {\r\n        this.editCoordinates(modelID, ids, true);\r\n    }\r\n\r\n    showItems(modelID: number, ids: number[]) {\r\n        this.editCoordinates(modelID, ids, false);\r\n    }\r\n\r\n    editCoordinates(modelID: number, ids: number[], hide: boolean) {\r\n        const current = this.expressIDCoordinatesMap[modelID];\r\n        const indices: number[] = [];\r\n        ids.forEach((id: number) => {\r\n            if (current[id]) {\r\n                for (let i = 0; i < current[id].length; i++) {\r\n                    indices.push(current[id][i]);\r\n                }\r\n            }\r\n        });\r\n        const coords = this.getCoordinates(modelID);\r\n        const initial = this.modelCoordinates[modelID];\r\n        if (hide) indices.forEach(i => coords.set([0, 0, 0], i));\r\n        else indices.forEach(i => coords.set([initial[i], initial[i + 1], initial[i+2]], i));\r\n\r\n        this.getAttributes(modelID).position.needsUpdate = true;\r\n    }\r\n\r\n    showAllItems(modelID: number) {\r\n        if (this.modelCoordinates[modelID]) {\r\n            this.resetCoordinates(modelID);\r\n            this.getAttributes(modelID).position.needsUpdate = true;\r\n        }\r\n    }\r\n\r\n    hideAllItems(modelID: number) {\r\n        this.getCoordinates(modelID).fill(0);\r\n        this.getAttributes(modelID).position.needsUpdate = true;\r\n    }\r\n\r\n    private initializeCoordinates(modelID: number) {\r\n        const coordinates = this.getCoordinates(modelID);\r\n        if (!this.modelCoordinates[modelID]) {\r\n            this.modelCoordinates[modelID] = new Float32Array(coordinates);\r\n        }\r\n    }\r\n\r\n    private resetCoordinates(modelID: number) {\r\n        const initial = this.modelCoordinates[modelID];\r\n        this.getCoordinates(modelID).set(initial);\r\n    }\r\n\r\n    private getCoordinates(modelID: number) {\r\n        return this.getAttributes(modelID).position.array as Float32Array;\r\n    }\r\n\r\n    private getAttributes(modelID: number) {\r\n        return this.state.models[modelID].mesh.geometry.attributes;\r\n    }\r\n}","import { IfcModel, IfcState } from '../BaseDefinitions';\r\nimport { Mesh } from 'three';\r\n\r\nexport class MemoryCleaner {\r\n    constructor(private state: IfcState) {};\r\n\r\n    releaseAllModels() {\r\n        const models = Object.values(this.state.models);\r\n        models.forEach(model => {\r\n            this.releaseMeshModelMemory(model);\r\n            this.releaseJSONMemory(model);\r\n            this.releaseGeometryByMaterials(model);\r\n            // @ts-ignore\r\n            model.types = null;\r\n        });\r\n    }\r\n\r\n    private releaseGeometryByMaterials(model: IfcModel) {\r\n        const keys = Object.keys(model.items);\r\n        keys.forEach(key => {\r\n            const geomsByMat = model.items[key];\r\n            geomsByMat.material.dispose();\r\n            // @ts-ignore\r\n            geomsByMat.material = null;\r\n\r\n            Object.values(geomsByMat.geometries).forEach(geom => geom.dispose());\r\n            // @ts-ignore\r\n            geomsByMat.geometries = null;\r\n        });\r\n        // @ts-ignore\r\n        model.items = null;\r\n    }\r\n\r\n    private releaseJSONMemory(model: IfcModel) {\r\n        const keys = Object.keys(model.jsonData);\r\n        keys.forEach((key) => delete model.jsonData[parseInt(key)]);\r\n        // @ts-ignore\r\n        model.jsonData = null;\r\n    }\r\n\r\n    private releaseMeshModelMemory(model: IfcModel) {\r\n        this.releaseMeshMemory(model.mesh);\r\n        // @ts-ignore\r\n        model.mesh = null;\r\n    }\r\n\r\n    private releaseMeshMemory(mesh: Mesh) {\r\n        if (mesh.geometry) {\r\n            mesh.geometry.dispose();\r\n        }\r\n        if (mesh.parent) {\r\n            mesh.parent.remove(mesh);\r\n        }\r\n        if (mesh.material) {\r\n            Array.isArray(mesh.material) ?\r\n                mesh.material.forEach(mat => mat.dispose()) :\r\n                mesh.material.dispose();\r\n        }\r\n        if(mesh.children.length > 0) {\r\n            mesh.children.forEach(child => {\r\n                if(child.type === \"Mesh\") this.releaseMeshMemory(child as Mesh);\r\n                mesh.remove(child);\r\n            })\r\n        }\r\n    }\r\n}","import * as WebIFC from 'web-ifc';\r\nimport {IFCParser} from './IFCParser';\r\nimport {SubsetManager} from './SubsetManager';\r\nimport {PropertyManager} from './PropertyManager';\r\nimport {IfcElements} from './IFCElementsMap';\r\nimport {TypeManager} from './TypeManager';\r\nimport {HighlightConfigOfModel, IfcModel, IfcState, JSONObject} from '../BaseDefinitions';\r\nimport {BufferGeometry, Material, Mesh, Object3D, Scene} from 'three';\r\nimport {IFCModel} from './IFCModel';\r\nimport {BvhManager} from './BvhManager';\r\nimport {ItemsHider} from './ItemsHider';\r\nimport {LoaderSettings} from 'web-ifc';\r\nimport { MemoryCleaner } from './MemoryCleaner';\r\n\r\n/**\r\n * Contains all the logic to work with the loaded IFC files (select, edit, etc).\r\n */\r\nexport class IFCManager {\r\n    private state: IfcState = {models: [], api: new WebIFC.IfcAPI(), useJSON: false};\r\n    private BVH = new BvhManager();\r\n    private parser = new IFCParser(this.state, this.BVH);\r\n    private subsets = new SubsetManager(this.state, this.BVH);\r\n    private properties = new PropertyManager(this.state);\r\n    private types = new TypeManager(this.state);\r\n    private hider = new ItemsHider(this.state);\r\n    private cleaner = new MemoryCleaner(this.state);\r\n\r\n    async parse(buffer: ArrayBuffer) {\r\n        const model = await this.parser.parse(buffer) as IFCModel;\r\n        model.setIFCManager(this);\r\n        this.state.useJSON ? this.disposeMemory() : this.types.getAllTypes();\r\n        this.hider.processCoordinates(model.modelID);\r\n        return model;\r\n    }\r\n\r\n    getAndClearErrors(modelID: number) {\r\n        return this.parser.getAndClearErrors(modelID);\r\n    }\r\n\r\n    /**\r\n     * Sets the relative path of web-ifc.wasm file in the project.\r\n     * Beware: you **must** serve this file in your page; this means\r\n     * that you have to copy this files from *node_modules/web-ifc*\r\n     * to your deployment directory.\r\n     *\r\n     * If you don't use this methods,\r\n     * IFC.js assumes that you are serving it in the root directory.\r\n     *\r\n     * Example if web-ifc.wasm is in dist/wasmDir:\r\n     * `ifcLoader.setWasmPath(\"dist/wasmDir/\");`\r\n     *\r\n     * @path Relative path to web-ifc.wasm.\r\n     */\r\n    setWasmPath(path: string) {\r\n        this.state.api.SetWasmPath(path);\r\n    }\r\n\r\n    /**\r\n     * Applies a configuration for [web-ifc](https://ifcjs.github.io/info/docs/Guide/web-ifc/Introduction).\r\n     */\r\n    applyWebIfcConfig(settings: LoaderSettings) {\r\n        this.state.webIfcSettings = settings;\r\n    }\r\n\r\n    /**\r\n     * Enables the JSON mode (which consumes way less memory) and eliminates the WASM data.\r\n     * Only use this in the following scenarios:\r\n     * - If you don't need to access the properties of the IFC\r\n     * - If you will provide the properties as JSON.\r\n     */\r\n    useJSONData(useJSON = true) {\r\n        this.state.useJSON = useJSON;\r\n        this.disposeMemory();\r\n    }\r\n\r\n    /**\r\n     * Adds the properties of a model as JSON data.\r\n     * @modelID ID of the IFC model.\r\n     * @data: data as an object where the keys are the expressIDs and the values the properties.\r\n     */\r\n    addModelJSONData(modelID: number, data: { [id: number]: JSONObject }) {\r\n        const model = this.state.models[modelID];\r\n        if (model) {\r\n            model.jsonData = data;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Completely releases the WASM memory, thus drastically decreasing the memory use of the app.\r\n     * Only use this in the following scenarios:\r\n     * - If you don't need to access the properties of the IFC\r\n     * - If you will provide the properties as JSON.\r\n     */\r\n    disposeMemory() {\r\n        // @ts-ignore\r\n        this.state.api = null;\r\n        this.state.api = new WebIFC.IfcAPI();\r\n    }\r\n\r\n    /**\r\n     * Makes object picking a lot faster\r\n     * Courtesy of gkjohnson's [work](https://github.com/gkjohnson/three-mesh-bvh).\r\n     * Import these objects from his library and pass them as arguments. IFC.js takes care of the rest!\r\n     */\r\n    setupThreeMeshBVH(computeBoundsTree: any, disposeBoundsTree: any, acceleratedRaycast: any) {\r\n        this.BVH.initializeMeshBVH(computeBoundsTree, disposeBoundsTree, acceleratedRaycast);\r\n    }\r\n\r\n    /**\r\n     * Closes the specified model and deletes it from the [scene](https://threejs.org/docs/#api/en/scenes/Scene).\r\n     * @modelID ID of the IFC model.\r\n     * @scene Scene where the model is (if it's located in a scene).\r\n     */\r\n    close(modelID: number, scene?: Scene) {\r\n        this.state.api.CloseModel(modelID);\r\n        if (scene) scene.remove(this.state.models[modelID].mesh);\r\n        delete this.state.models[modelID];\r\n    }\r\n\r\n    /**\r\n     * Gets the **Express ID** to which the given face belongs.\r\n     * This ID uniquely identifies this entity within this IFC file.\r\n     * @geometry The geometry of the IFC model.\r\n     * @faceIndex The index of the face of a geometry.You can easily get this index using the [Raycaster](https://threejs.org/docs/#api/en/core/Raycaster).\r\n     */\r\n    getExpressId(geometry: BufferGeometry, faceIndex: number) {\r\n        return this.properties.getExpressId(geometry, faceIndex);\r\n    }\r\n\r\n    /**\r\n     * Returns all items of the specified type. You can import\r\n     * the types from *web-ifc*.\r\n     *\r\n     * Example to get all the standard walls of a project:\r\n     * ```js\r\n     * import { IFCWALLSTANDARDCASE } from 'web-ifc';\r\n     * const walls = ifcLoader.getAllItemsOfType(IFCWALLSTANDARDCASE);\r\n     * ```\r\n     * @modelID ID of the IFC model.\r\n     * @type type of IFC items to get.\r\n     * @verbose If false (default), this only gets IDs. If true, this also gets the native properties of all the fetched items.\r\n     */\r\n    getAllItemsOfType(modelID: number, type: number, verbose: boolean) {\r\n        return this.properties.getAllItemsOfType(modelID, type, verbose);\r\n    }\r\n\r\n    /**\r\n     * Gets the native properties of the given element.\r\n     * @modelID ID of the IFC model.\r\n     * @id Express ID of the element.\r\n     * @recursive Wether you want to get the information of the referenced elements recursively.\r\n     */\r\n    getItemProperties(modelID: number, id: number, recursive = false) {\r\n        return this.properties.getItemProperties(modelID, id, recursive);\r\n    }\r\n\r\n    /**\r\n     * Gets the [property sets](https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/schema/ifckernel/lexical/ifcpropertyset.htm)\r\n     * assigned to the given element.\r\n     * @modelID ID of the IFC model.\r\n     * @id Express ID of the element.\r\n     * @recursive If true, this gets the native properties of the referenced elements recursively.\r\n     */\r\n    getPropertySets(modelID: number, id: number, recursive = false) {\r\n        return this.properties.getPropertySets(modelID, id, recursive);\r\n    }\r\n\r\n    /**\r\n     * Gets the properties of the type assigned to the element.\r\n     * For example, if applied to a wall (IfcWall), this would get back the information\r\n     * contained in the IfcWallType assigned to it, if any.\r\n     * @modelID ID of the IFC model.\r\n     * @id Express ID of the element.\r\n     * @recursive If true, this gets the native properties of the referenced elements recursively.\r\n     */\r\n    getTypeProperties(modelID: number, id: number, recursive = false) {\r\n        return this.properties.getTypeProperties(modelID, id, recursive);\r\n    }\r\n\r\n    /**\r\n     * Gets the materials assigned to the given element.\r\n     * @modelID ID of the IFC model.\r\n     * @id Express ID of the element.\r\n     * @recursive If true, this gets the native properties of the referenced elements recursively.\r\n     */\r\n    getMaterialsProperties(modelID: number, id: number, recursive = false) {\r\n        return this.properties.getMaterialsProperties(modelID, id, recursive);\r\n    }\r\n\r\n    /**\r\n     * Gets the ifc type of the specified item.\r\n     * @modelID ID of the IFC model.\r\n     * @id Express ID of the element.\r\n     */\r\n    getIfcType(modelID: number, id: number) {\r\n        const typeID = this.state.models[modelID].types[id];\r\n        return IfcElements[typeID];\r\n    }\r\n\r\n    /**\r\n     * Gets the spatial structure of the project. The\r\n     * [spatial structure](https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/schema/ifcproductextension/lexical/ifcspatialstructureelement.htm)\r\n     * is the hierarchical structure that organizes every IFC project (all physical items\r\n     * are referenced to an element of the spatial structure). It is formed by\r\n     * one IfcProject that contains one or more IfcSites, that contain one or more\r\n     * IfcBuildings, that contain one or more IfcBuildingStoreys, that contain\r\n     * one or more IfcSpaces.\r\n     * @modelID ID of the IFC model.\r\n     */\r\n    getSpatialStructure(modelID: number, includeProperties?: boolean) {\r\n        return this.properties.getSpatialStructure(modelID, includeProperties);\r\n    }\r\n\r\n    /**\r\n     * Gets the mesh of the subset with the specified [material](https://threejs.org/docs/#api/en/materials/Material).\r\n     * If no material is given, this returns the subset with the original materials.\r\n     * @modelID ID of the IFC model.\r\n     * @material Material assigned to the subset (if any).\r\n     */\r\n    getSubset(modelID: number, material?: Material) {\r\n        return this.subsets.getSubset(modelID, material);\r\n    }\r\n\r\n    /**\r\n     * Removes the specified subset.\r\n     * @modelID ID of the IFC model.\r\n     * @parent The parent where the subset is (can be any `THREE.Object3D`).\r\n     * @material Material assigned to the subset, if any.\r\n     */\r\n    removeSubset(modelID: number, parent?: Object3D, material?: Material) {\r\n        this.subsets.removeSubset(modelID, parent, material);\r\n    }\r\n\r\n    /**\r\n     * Creates a new geometric subset.\r\n     * @config A configuration object with the following options:\r\n     * - **scene**: `THREE.Object3D` where the model is located.\r\n     * - **modelID**: ID of the model.\r\n     * - **ids**: Express IDs of the items of the model that will conform the subset.\r\n     * - **removePrevious**: wether to remove the previous subset of this model with this material.\r\n     * - **material**: (optional) wether to apply a material to the subset\r\n     */\r\n    createSubset(config: HighlightConfigOfModel) {\r\n        return this.subsets.createSubset(config);\r\n    }\r\n\r\n    /**\r\n     * Hides the selected items in the specified model\r\n     * @modelID ID of the IFC model.\r\n     * @ids Express ID of the elements.\r\n     */\r\n    hideItems(modelID: number, ids: number[]) {\r\n        this.hider.hideItems(modelID, ids);\r\n    }\r\n\r\n    /**\r\n     * Hides all the items of the specified model\r\n     * @modelID ID of the IFC model.\r\n     */\r\n    hideAllItems(modelID: number) {\r\n        this.hider.hideAllItems(modelID);\r\n    }\r\n\r\n    /**\r\n     * Shows all the items of the specified model\r\n     * @modelID ID of the IFC model.\r\n     * @ids Express ID of the elements.\r\n     */\r\n    showItems(modelID: number, ids: number[]) {\r\n        this.hider.showItems(modelID, ids);\r\n    }\r\n\r\n    /**\r\n     * Shows all the items of the specified model\r\n     * @modelID ID of the IFC model.\r\n     */\r\n    showAllItems(modelID: number) {\r\n        this.hider.showAllItems(modelID);\r\n    }\r\n\r\n    /**\r\n     * Returns the underlying web-ifc API.\r\n     */\r\n    get ifcAPI() {\r\n        return this.state.api;\r\n    }\r\n\r\n    /**\r\n     * Deletes all data, releasing all memory\r\n     * Work in progress: this doesn't remove all the memory\r\n     * Page reloading recommended to avoid heap overload\r\n     */\r\n    releaseAllMemory() {\r\n        this.subsets.dispose();\r\n        this.hider.dispose();\r\n        this.cleaner.releaseAllModels();\r\n        // @ts-ignore\r\n        this.state.api = null;\r\n        // @ts-ignore\r\n        this.state.models = null;\r\n        // @ts-ignore\r\n        this.state = null;\r\n    }\r\n}\r\n","import { IFCManager } from './IFC/Components/IFCManager';\r\nimport { FileLoader, Loader, LoadingManager } from 'three';\r\nimport { IFCModel } from './IFC/Components/IFCModel';\r\n\r\nclass IFCLoader extends Loader {\r\n    ifcManager: IFCManager;\r\n\r\n    constructor(manager?: LoadingManager) {\r\n        super(manager);\r\n        this.ifcManager = new IFCManager();\r\n    }\r\n\r\n    load(\r\n        url: any,\r\n        onLoad: (ifc: IFCModel) => void,\r\n        onProgress?: (event: ProgressEvent) => void,\r\n        onError?: (event: ErrorEvent) => void\r\n    ) {\r\n        const scope = this;\r\n\r\n        const loader = new FileLoader(scope.manager);\r\n        loader.setPath(scope.path);\r\n        loader.setResponseType('arraybuffer');\r\n        loader.setRequestHeader(scope.requestHeader);\r\n        loader.setWithCredentials(scope.withCredentials);\r\n        loader.load(\r\n            url,\r\n            async function (buffer) {\r\n                try {\r\n                    if (typeof buffer == 'string') {\r\n                        throw new Error('IFC files must be given as a buffer!');\r\n                    }\r\n                    onLoad(await scope.parse(buffer));\r\n                } catch (e) {\r\n                    if (onError) {\r\n                        onError(e);\r\n                    } else {\r\n                        console.error(e);\r\n                    }\r\n\r\n                    scope.manager.itemError(url);\r\n                }\r\n            },\r\n            onProgress,\r\n            onError\r\n        );\r\n    }\r\n\r\n    parse(buffer: ArrayBuffer) {\r\n        return this.ifcManager.parse(buffer);\r\n    }\r\n}\r\n\r\nexport { IFCLoader };\r\n"],"names":[],"mappings":"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"}